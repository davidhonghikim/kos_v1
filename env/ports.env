# =============================================================================
# KOS v1 - Centralized Network, Port, and Orchestration Configuration
#
# FINAL - This file defines HOW containers run and network.
# Organized in the canonical service order.
# =============================================================================


# =============================================================================
# SECTION 1: GLOBAL NETWORK & HOST CONFIGURATION
# =============================================================================
KOS_DEFAULT_HOST=localhost
KOS_CONTAINER_NETWORK=kos-network
KOS_NETWORK_DRIVER=bridge
KOS_NETWORK_SUBNET=172.20.0.0/16
KOS_ADMIN_USER=kosadmin
KOS_ADMIN_PASSWORD=kos30437
KOS_ADMIN_EMAIL=admin@kos.dev


# =============================================================================
# SECTION 2: CENTRALIZED PORT ASSIGNMENTS (SINGLE SOURCE OF TRUTH)
# =============================================================================
# --- Core Services ---
KOS_API_EXTERNAL_PORT=8000
KOS_API_INTERNAL_PORT=8000
KOS_ADMIN_PANEL_EXTERNAL_PORT=9003
KOS_ADMIN_PANEL_INTERNAL_PORT=9000
KOS_FRONTEND_EXTERNAL_PORT=3000
KOS_FRONTEND_INTERNAL_PORT=3000
KOS_REGISTRY_EXTERNAL_PORT=5000
KOS_REGISTRY_INTERNAL_PORT=5000
KOS_VAULT_EXTERNAL_PORT=8200
KOS_VAULT_INTERNAL_PORT=8200
KOS_PROMPT_MANAGER_EXTERNAL_PORT=3008
KOS_PROMPT_MANAGER_INTERNAL_PORT=8000
KOS_ARTIFACT_MANAGER_EXTERNAL_PORT=3009
KOS_ARTIFACT_MANAGER_INTERNAL_PORT=8000

# --- Web & Proxy ---
KOS_NGINX_EXTERNAL_PORT=80
KOS_NGINX_INTERNAL_PORT=80
KOS_NGINX_SSL_EXTERNAL_PORT=443
KOS_NGINX_SSL_INTERNAL_PORT=443

# --- Database & Storage ---
KOS_POSTGRES_EXTERNAL_PORT=5432
KOS_POSTGRES_INTERNAL_PORT=5432
KOS_PGADMIN_EXTERNAL_PORT=5433
KOS_PGADMIN_INTERNAL_PORT=80
KOS_MONGO_EXTERNAL_PORT=27017
KOS_MONGO_INTERNAL_PORT=27017
KOS_MONGO_EXPRESS_EXTERNAL_PORT=27018
KOS_MONGO_EXPRESS_INTERNAL_PORT=8081
KOS_NEO4J_EXTERNAL_PORT=7687
KOS_NEO4J_INTERNAL_PORT=7687
KOS_NEO4J_HTTP_EXTERNAL_PORT=7474
KOS_NEO4J_HTTP_INTERNAL_PORT=7474
KOS_WEAVIATE_EXTERNAL_PORT=8082
KOS_WEAVIATE_INTERNAL_PORT=8080
KOS_MINIO_EXTERNAL_PORT=9000
KOS_MINIO_INTERNAL_PORT=9000
KOS_MINIO_CONSOLE_EXTERNAL_PORT=9001
KOS_MINIO_CONSOLE_INTERNAL_PORT=9001
KOS_REDIS_EXTERNAL_PORT=6379
KOS_REDIS_INTERNAL_PORT=6379
KOS_REDIS_COMMANDER_EXTERNAL_PORT=6380
KOS_REDIS_COMMANDER_INTERNAL_PORT=8081
KOS_ELASTICSEARCH_EXTERNAL_PORT=9200
KOS_ELASTICSEARCH_INTERNAL_PORT=9200
KOS_ELASTICSEARCH_CLUSTER_EXTERNAL_PORT=9300
KOS_ELASTICSEARCH_CLUSTER_INTERNAL_PORT=9300

# --- Monitoring ---
KOS_PROMETHEUS_EXTERNAL_PORT=9090
KOS_PROMETHEUS_INTERNAL_PORT=9090
KOS_GRAFANA_EXTERNAL_PORT=3007
KOS_GRAFANA_INTERNAL_PORT=3000
KOS_CADVISOR_EXTERNAL_PORT=8081
KOS_CADVISOR_INTERNAL_PORT=8081

# --- Workflow & Development ---
KOS_N8N_EXTERNAL_PORT=5678
KOS_N8N_INTERNAL_PORT=5678
KOS_PENPOT_EXTERNAL_PORT=9002
KOS_PENPOT_INTERNAL_PORT=9002
KOS_BROWSERUSE_EXTERNAL_PORT=3004
KOS_BROWSERUSE_INTERNAL_PORT=3000
KOS_CONTEXT7_EXTERNAL_PORT=3005
KOS_CONTEXT7_INTERNAL_PORT=3000
KOS_CODIUM_EXTERNAL_PORT=3006
KOS_CODIUM_INTERNAL_PORT=8080
KOS_GITEA_EXTERNAL_PORT=3002
KOS_GITEA_INTERNAL_PORT=3000
KOS_GITEA_SSH_EXTERNAL_PORT=22
KOS_GITEA_SSH_INTERNAL_PORT=2222
KOS_SUPABASE_EXTERNAL_PORT=54321
KOS_SUPABASE_INTERNAL_PORT=5432
KOS_SUPABASE_STUDIO_EXTERNAL_PORT=3003
KOS_SUPABASE_STUDIO_INTERNAL_PORT=3000
KOS_NEXTCLOUD_EXTERNAL_PORT=8083
KOS_NEXTCLOUD_INTERNAL_PORT=80

# --- AI/ML Services ---
KOS_OLLAMA_EXTERNAL_PORT=11434
KOS_OLLAMA_INTERNAL_PORT=11434
KOS_OPENWEBUI_EXTERNAL_PORT=3001
KOS_OPENWEBUI_INTERNAL_PORT=8080
KOS_AUTOMATIC1111_EXTERNAL_PORT=7860
KOS_AUTOMATIC1111_INTERNAL_PORT=7860
KOS_COMFYUI_EXTERNAL_PORT=8188
KOS_COMFYUI_INTERNAL_PORT=8188
KOS_INVOKEAI_EXTERNAL_PORT=8189
KOS_INVOKEAI_INTERNAL_PORT=8189
KOS_HUGGINGFACE_EXTERNAL_PORT=8084
KOS_HUGGINGFACE_INTERNAL_PORT=8082

# =============================================================================
# SECTION 3: CONTAINER ORCHESTRATION & STARTUP CONFIGURATION
# =============================================================================

# --- Core Services ---
KOS_API_CONTAINER_NAME=kos-api
KOS_API_RESTART_POLICY=unless-stopped
KOS_API_NETWORK=${KOS_CONTAINER_NETWORK}
KOS_API_HEALTH_CHECK_COMMAND=curl -f http://${KOS_API_CONTAINER_NAME}:${KOS_API_INTERNAL_PORT}/health || exit 1
KOS_API_HEALTH_CHECK_INTERVAL=30s
KOS_API_HEALTH_CHECK_TIMEOUT=10s
KOS_API_HEALTH_CHECK_RETRIES=3

KOS_ADMIN_PANEL_CONTAINER_NAME=kos-admin-panel
KOS_ADMIN_PANEL_RESTART_POLICY=unless-stopped
KOS_ADMIN_PANEL_NETWORK=${KOS_CONTAINER_NETWORK}
KOS_ADMIN_PANEL_HEALTH_CHECK_COMMAND=curl -f http://${KOS_ADMIN_PANEL_CONTAINER_NAME}:${KOS_ADMIN_PANEL_INTERNAL_PORT}/api/status || exit 1
KOS_ADMIN_PANEL_HEALTH_CHECK_INTERVAL=30s
KOS_ADMIN_PANEL_HEALTH_CHECK_TIMEOUT=10s
KOS_ADMIN_PANEL_HEALTH_CHECK_RETRIES=3

KOS_FRONTEND_CONTAINER_NAME=kos-frontend
KOS_FRONTEND_RESTART_POLICY=unless-stopped
KOS_FRONTEND_NETWORK=${KOS_CONTAINER_NETWORK}
KOS_FRONTEND_HEALTH_CHECK_COMMAND=curl -f http://${KOS_FRONTEND_CONTAINER_NAME}:${KOS_FRONTEND_INTERNAL_PORT} || exit 1
KOS_FRONTEND_HEALTH_CHECK_INTERVAL=30s
KOS_FRONTEND_HEALTH_CHECK_TIMEOUT=10s
KOS_FRONTEND_HEALTH_CHECK_RETRIES=3

KOS_REGISTRY_CONTAINER_NAME=kos-registry
KOS_REGISTRY_RESTART_POLICY=unless-stopped
KOS_REGISTRY_NETWORK=${KOS_CONTAINER_NETWORK}
KOS_REGISTRY_HEALTH_CHECK_COMMAND=curl -f http://${KOS_REGISTRY_CONTAINER_NAME}:${KOS_REGISTRY_INTERNAL_PORT}/v2/ || exit 1
KOS_REGISTRY_HEALTH_CHECK_INTERVAL=30s
KOS_REGISTRY_HEALTH_CHECK_TIMEOUT=10s
KOS_REGISTRY_HEALTH_CHECK_RETRIES=3

KOS_VAULT_CONTAINER_NAME=kos-vault
KOS_VAULT_RESTART_POLICY=unless-stopped
KOS_VAULT_NETWORK=${KOS_CONTAINER_NETWORK}
KOS_VAULT_DEV_LISTEN_ADDRESS=0.0.0.0:${KOS_VAULT_INTERNAL_PORT}
KOS_VAULT_DEV_ROOT_TOKEN_ID=${KOS_ADMIN_PASSWORD}
KOS_VAULT_HEALTH_CHECK_COMMAND=curl -f http://${KOS_VAULT_CONTAINER_NAME}:${KOS_VAULT_INTERNAL_PORT}/v1/sys/health || exit 1
KOS_VAULT_HEALTH_CHECK_INTERVAL=30s
KOS_VAULT_HEALTH_CHECK_TIMEOUT=10s
KOS_VAULT_HEALTH_CHECK_RETRIES=3

KOS_PROMPT_MANAGER_CONTAINER_NAME=kos-prompt-manager
KOS_PROMPT_MANAGER_RESTART_POLICY=unless-stopped
KOS_PROMPT_MANAGER_NETWORK=${KOS_CONTAINER_NETWORK}
KOS_PROMPT_MANAGER_HEALTH_CHECK_COMMAND=curl -f http://${KOS_PROMPT_MANAGER_CONTAINER_NAME}:${KOS_PROMPT_MANAGER_INTERNAL_PORT}/health || exit 1
KOS_PROMPT_MANAGER_HEALTH_CHECK_INTERVAL=30s
KOS_PROMPT_MANAGER_HEALTH_CHECK_TIMEOUT=10s
KOS_PROMPT_MANAGER_HEALTH_CHECK_RETRIES=3

KOS_ARTIFACT_MANAGER_CONTAINER_NAME=kos-artifact-manager
KOS_ARTIFACT_MANAGER_RESTART_POLICY=unless-stopped
KOS_ARTIFACT_MANAGER_NETWORK=${KOS_CONTAINER_NETWORK}
KOS_ARTIFACT_MANAGER_HEALTH_CHECK_COMMAND=curl -f http://${KOS_ARTIFACT_MANAGER_CONTAINER_NAME}:${KOS_ARTIFACT_MANAGER_INTERNAL_PORT}/health || exit 1
KOS_ARTIFACT_MANAGER_HEALTH_CHECK_INTERVAL=30s
KOS_ARTIFACT_MANAGER_HEALTH_CHECK_TIMEOUT=10s
KOS_ARTIFACT_MANAGER_HEALTH_CHECK_RETRIES=3

# --- AI/ML Services ---
KOS_OLLAMA_CONTAINER_NAME=kos-ollama
KOS_OLLAMA_RESTART_POLICY=unless-stopped
KOS_OLLAMA_NETWORK=${KOS_CONTAINER_NETWORK}
KOS_OLLAMA_HEALTH_CHECK_COMMAND=curl -f http://${KOS_OLLAMA_CONTAINER_NAME}:${KOS_OLLAMA_INTERNAL_PORT}/api/tags || exit 1
KOS_OLLAMA_HEALTH_CHECK_INTERVAL=30s
KOS_OLLAMA_HEALTH_CHECK_TIMEOUT=10s
KOS_OLLAMA_HEALTH_CHECK_RETRIES=3

KOS_OPENWEBUI_CONTAINER_NAME=kos-openwebui
KOS_OPENWEBUI_RESTART_POLICY=unless-stopped
KOS_OPENWEBUI_NETWORK=${KOS_CONTAINER_NETWORK}
KOS_OPENWEBUI_ADMIN_USER=${KOS_ADMIN_USER}
KOS_OPENWEBUI_ADMIN_PASSWORD=${KOS_ADMIN_PASSWORD}
KOS_OPENWEBUI_HEALTH_CHECK_COMMAND=curl -f http://${KOS_OPENWEBUI_CONTAINER_NAME}:${KOS_OPENWEBUI_INTERNAL_PORT} || exit 1
KOS_OPENWEBUI_OLLAMA_API_BASE_URL=http://kos-ollama:${KOS_OLLAMA_INTERNAL_PORT}
KOS_OPENWEBUI_HEALTH_CHECK_INTERVAL=30s
KOS_OPENWEBUI_HEALTH_CHECK_TIMEOUT=10s
KOS_OPENWEBUI_HEALTH_CHECK_RETRIES=3

KOS_AUTOMATIC1111_CONTAINER_NAME=kos-automatic1111
KOS_AUTOMATIC1111_RESTART_POLICY=unless-stopped
KOS_AUTOMATIC1111_NETWORK=${KOS_CONTAINER_NETWORK}
KOS_AUTOMATIC1111_COMMANDLINE_ARGS=--listen --port ${KOS_AUTOMATIC1111_INTERNAL_PORT} --enable-insecure-extension-access
KOS_AUTOMATIC1111_HEALTH_CHECK_COMMAND=curl -f http://${KOS_AUTOMATIC1111_CONTAINER_NAME}:${KOS_AUTOMATIC1111_INTERNAL_PORT} || exit 1
KOS_AUTOMATIC1111_HEALTH_CHECK_INTERVAL=30s
KOS_AUTOMATIC1111_HEALTH_CHECK_TIMEOUT=10s
KOS_AUTOMATIC1111_HEALTH_CHECK_RETRIES=3

KOS_COMFYUI_CONTAINER_NAME=kos-comfyui
KOS_COMFYUI_RESTART_POLICY=unless-stopped
KOS_COMFYUI_NETWORK=${KOS_CONTAINER_NETWORK}
KOS_COMFYUI_HEALTH_CHECK_COMMAND=curl -f http://${KOS_COMFYUI_CONTAINER_NAME}:${KOS_COMFYUI_INTERNAL_PORT} || exit 1
KOS_COMFYUI_HEALTH_CHECK_INTERVAL=30s
KOS_COMFYUI_HEALTH_CHECK_TIMEOUT=10s
KOS_COMFYUI_HEALTH_CHECK_RETRIES=3

KOS_INVOKEAI_CONTAINER_NAME=kos-invokeai
KOS_INVOKEAI_RESTART_POLICY=unless-stopped
KOS_INVOKEAI_NETWORK=${KOS_CONTAINER_NETWORK}
KOS_INVOKEAI_HEALTH_CHECK_COMMAND=curl -f http://${KOS_INVOKEAI_CONTAINER_NAME}:${KOS_INVOKEAI_INTERNAL_PORT} || exit 1
KOS_INVOKEAI_HEALTH_CHECK_INTERVAL=30s
KOS_INVOKEAI_HEALTH_CHECK_TIMEOUT=10s
KOS_INVOKEAI_HEALTH_CHECK_RETRIES=3

KOS_HUGGINGFACE_CONTAINER_NAME=kos-huggingface
KOS_HUGGINGFACE_RESTART_POLICY=unless-stopped
KOS_HUGGINGFACE_NETWORK=${KOS_CONTAINER_NETWORK}
KOS_HUGGINGFACE_HEALTH_CHECK_COMMAND=curl -f http://${KOS_HUGGINGFACE_CONTAINER_NAME}:${KOS_HUGGINGFACE_INTERNAL_PORT} || exit 1
KOS_HUGGINGFACE_HEALTH_CHECK_INTERVAL=30s
KOS_HUGGINGFACE_HEALTH_CHECK_TIMEOUT=10s
KOS_HUGGINGFACE_HEALTH_CHECK_RETRIES=3

# --- Web & Proxy ---
KOS_NGINX_CONTAINER_NAME=kos-nginx
KOS_NGINX_RESTART_POLICY=unless-stopped
KOS_NGINX_NETWORK=${KOS_CONTAINER_NETWORK}
KOS_NGINX_HEALTH_CHECK_COMMAND=curl -f http://${KOS_NGINX_CONTAINER_NAME}:${KOS_NGINX_INTERNAL_PORT} || exit 1
KOS_NGINX_HEALTH_CHECK_INTERVAL=30s
KOS_NGINX_HEALTH_CHECK_TIMEOUT=10s
KOS_NGINX_HEALTH_CHECK_RETRIES=3

# --- Database & Storage ---
KOS_POSTGRES_CONTAINER_NAME=kos-postgres
KOS_POSTGRES_RESTART_POLICY=unless-stopped
KOS_POSTGRES_NETWORK=${KOS_CONTAINER_NETWORK}
KOS_POSTGRES_DB=kos
KOS_POSTGRES_USER=${KOS_ADMIN_USER}
KOS_POSTGRES_PASSWORD=${KOS_ADMIN_PASSWORD}
KOS_POSTGRES_HEALTH_CHECK_COMMAND=pg_isready -h ${KOS_POSTGRES_CONTAINER_NAME} -U ${KOS_POSTGRES_USER} -d ${KOS_POSTGRES_DB}
KOS_POSTGRES_HEALTH_CHECK_INTERVAL=30s
KOS_POSTGRES_HEALTH_CHECK_TIMEOUT=10s
KOS_POSTGRES_HEALTH_CHECK_RETRIES=3

KOS_PGADMIN_CONTAINER_NAME=kos-pgadmin
KOS_PGADMIN_RESTART_POLICY=unless-stopped
KOS_PGADMIN_NETWORK=${KOS_CONTAINER_NETWORK}
KOS_PGADMIN_EMAIL=${KOS_ADMIN_EMAIL}
KOS_PGADMIN_PASSWORD=${KOS_ADMIN_PASSWORD}
KOS_PGADMIN_HEALTH_CHECK_COMMAND=curl -f http://${KOS_PGADMIN_CONTAINER_NAME}:${KOS_PGADMIN_INTERNAL_PORT}/misc/ping || exit 1
KOS_PGADMIN_HEALTH_CHECK_INTERVAL=30s
KOS_PGADMIN_HEALTH_CHECK_TIMEOUT=10s
KOS_PGADMIN_HEALTH_CHECK_RETRIES=3

KOS_MONGO_CONTAINER_NAME=kos-mongo
KOS_MONGO_RESTART_POLICY=unless-stopped
KOS_MONGO_NETWORK=${KOS_CONTAINER_NETWORK}
KOS_MONGO_ADMIN_USER=${KOS_ADMIN_USER}
KOS_MONGO_ADMIN_PASSWORD=${KOS_ADMIN_PASSWORD}
KOS_MONGO_HEALTH_CHECK_COMMAND=mongosh --host ${KOS_MONGO_CONTAINER_NAME} --eval "db.adminCommand('ping')"
KOS_MONGO_HEALTH_CHECK_INTERVAL=30s
KOS_MONGO_HEALTH_CHECK_TIMEOUT=10s
KOS_MONGO_HEALTH_CHECK_RETRIES=3

KOS_MONGO_EXPRESS_CONTAINER_NAME=kos-mongo-express
KOS_MONGO_EXPRESS_RESTART_POLICY=unless-stopped
KOS_MONGO_EXPRESS_NETWORK=${KOS_CONTAINER_NETWORK}
KOS_MONGO_EXPRESS_USER=${KOS_ADMIN_USER}
KOS_MONGO_EXPRESS_PASSWORD=${KOS_ADMIN_PASSWORD}
KOS_MONGO_EXPRESS_HEALTH_CHECK_COMMAND=curl -f http://${KOS_MONGO_EXPRESS_CONTAINER_NAME}:${KOS_MONGO_EXPRESS_INTERNAL_PORT} || exit 1
KOS_MONGO_EXPRESS_HEALTH_CHECK_INTERVAL=30s
KOS_MONGO_EXPRESS_HEALTH_CHECK_TIMEOUT=10s
KOS_MONGO_EXPRESS_HEALTH_CHECK_RETRIES=3

KOS_NEO4J_CONTAINER_NAME=kos-neo4j
KOS_NEO4J_RESTART_POLICY=unless-stopped
KOS_NEO4J_NETWORK=${KOS_CONTAINER_NETWORK}
KOS_NEO4J_USER=${KOS_ADMIN_USER}
KOS_NEO4J_PASSWORD=${KOS_ADMIN_PASSWORD}
KOS_NEO4J_HEALTH_CHECK_COMMAND=curl -f http://${KOS_NEO4J_CONTAINER_NAME}:${KOS_NEO4J_HTTP_INTERNAL_PORT}/browser/ || exit 1
KOS_NEO4J_HEALTH_CHECK_INTERVAL=30s
KOS_NEO4J_HEALTH_CHECK_TIMEOUT=10s
KOS_NEO4J_HEALTH_CHECK_RETRIES=3

KOS_WEAVIATE_CONTAINER_NAME=kos-weaviate
KOS_WEAVIATE_RESTART_POLICY=unless-stopped
KOS_WEAVIATE_NETWORK=${KOS_CONTAINER_NETWORK}
KOS_WEAVIATE_HEALTH_CHECK_COMMAND=curl -f http://${KOS_WEAVIATE_CONTAINER_NAME}:${KOS_WEAVIATE_INTERNAL_PORT}/v1/.well-known/ready || exit 1
KOS_WEAVIATE_HEALTH_CHECK_INTERVAL=30s
KOS_WEAVIATE_HEALTH_CHECK_TIMEOUT=10s
KOS_WEAVIATE_HEALTH_CHECK_RETRIES=3

KOS_MINIO_CONTAINER_NAME=kos-minio
KOS_MINIO_RESTART_POLICY=unless-stopped
KOS_MINIO_NETWORK=${KOS_CONTAINER_NETWORK}
KOS_MINIO_ROOT_USER=${KOS_ADMIN_USER}
KOS_MINIO_ROOT_PASSWORD=${KOS_ADMIN_PASSWORD}
KOS_MINIO_COMMAND=server /data --console-address ":${KOS_MINIO_CONSOLE_INTERNAL_PORT}"
KOS_MINIO_HEALTH_CHECK_COMMAND=curl -f http://${KOS_MINIO_CONTAINER_NAME}:${KOS_MINIO_INTERNAL_PORT}/minio/health/live || exit 1
KOS_MINIO_HEALTH_CHECK_INTERVAL=30s
KOS_MINIO_HEALTH_CHECK_TIMEOUT=10s
KOS_MINIO_HEALTH_CHECK_RETRIES=3

KOS_REDIS_CONTAINER_NAME=kos-redis
KOS_REDIS_RESTART_POLICY=unless-stopped
KOS_REDIS_NETWORK=${KOS_CONTAINER_NETWORK}
KOS_REDIS_PASSWORD=${KOS_ADMIN_PASSWORD}
KOS_REDIS_HEALTH_CHECK_COMMAND=redis-cli -h ${KOS_REDIS_CONTAINER_NAME} -a ${KOS_ADMIN_PASSWORD} ping | grep PONG
KOS_REDIS_HEALTH_CHECK_INTERVAL=30s
KOS_REDIS_HEALTH_CHECK_TIMEOUT=10s
KOS_REDIS_HEALTH_CHECK_RETRIES=3

KOS_REDIS_COMMANDER_CONTAINER_NAME=kos-redis-commander
KOS_REDIS_COMMANDER_RESTART_POLICY=unless-stopped
KOS_REDIS_COMMANDER_NETWORK=${KOS_CONTAINER_NETWORK}
KOS_REDIS_COMMANDER_USER=${KOS_ADMIN_USER}
KOS_REDIS_COMMANDER_PASSWORD=${KOS_ADMIN_PASSWORD}
KOS_REDIS_COMMANDER_REDIS_HOSTS=local:${KOS_REDIS_CONTAINER_NAME}:${KOS_REDIS_INTERNAL_PORT}:0:${KOS_ADMIN_PASSWORD}
KOS_REDIS_COMMANDER_HEALTH_CHECK_COMMAND=curl -f http://${KOS_REDIS_COMMANDER_CONTAINER_NAME}:${KOS_REDIS_COMMANDER_INTERNAL_PORT} || exit 1
KOS_REDIS_COMMANDER_HEALTH_CHECK_INTERVAL=30s
KOS_REDIS_COMMANDER_HEALTH_CHECK_TIMEOUT=10s
KOS_REDIS_COMMANDER_HEALTH_CHECK_RETRIES=3

KOS_ELASTICSEARCH_CONTAINER_NAME=kos-elasticsearch
KOS_ELASTICSEARCH_RESTART_POLICY=unless-stopped
KOS_ELASTICSEARCH_NETWORK=${KOS_CONTAINER_NETWORK}
KOS_ELASTICSEARCH_USERNAME=${KOS_ADMIN_USER}
KOS_ELASTICSEARCH_PASSWORD=${KOS_ADMIN_PASSWORD}
KOS_ELASTICSEARCH_HEALTH_CHECK_COMMAND=curl -u ${KOS_ELASTICSEARCH_USERNAME}:${KOS_ELASTICSEARCH_PASSWORD} -f http://${KOS_ELASTICSEARCH_CONTAINER_NAME}:${KOS_ELASTICSEARCH_INTERNAL_PORT}/_cluster/health || exit 1
KOS_ELASTICSEARCH_HEALTH_CHECK_INTERVAL=30s
KOS_ELASTICSEARCH_HEALTH_CHECK_TIMEOUT=10s
KOS_ELASTICSEARCH_HEALTH_CHECK_RETRIES=3

# --- Monitoring ---
KOS_PROMETHEUS_CONTAINER_NAME=kos-prometheus
KOS_PROMETHEUS_RESTART_POLICY=unless-stopped
KOS_PROMETHEUS_NETWORK=${KOS_CONTAINER_NETWORK}
KOS_PROMETHEUS_HEALTH_CHECK_COMMAND=curl -f http://${KOS_PROMETHEUS_CONTAINER_NAME}:${KOS_PROMETHEUS_INTERNAL_PORT}/-/healthy || exit 1
KOS_PROMETHEUS_HEALTH_CHECK_INTERVAL=30s
KOS_PROMETHEUS_HEALTH_CHECK_TIMEOUT=10s
KOS_PROMETHEUS_HEALTH_CHECK_RETRIES=3

KOS_GRAFANA_CONTAINER_NAME=kos-grafana
KOS_GRAFANA_RESTART_POLICY=unless-stopped
KOS_GRAFANA_NETWORK=${KOS_CONTAINER_NETWORK}
KOS_GRAFANA_ADMIN_USER=${KOS_ADMIN_USER}
KOS_GRAFANA_ADMIN_PASSWORD=${KOS_ADMIN_PASSWORD}
KOS_GRAFANA_HEALTH_CHECK_COMMAND=curl -f http://${KOS_GRAFANA_CONTAINER_NAME}:${KOS_GRAFANA_INTERNAL_PORT}/api/health || exit 1
KOS_GRAFana_HEALTH_CHECK_INTERVAL=30s
KOS_GRAFANA_HEALTH_CHECK_TIMEOUT=10s
KOS_GRAFANA_HEALTH_CHECK_RETRIES=3

KOS_CADVISOR_CONTAINER_NAME=kos-cadvisor
KOS_CADVISOR_RESTART_POLICY=unless-stopped
KOS_CADVISOR_NETWORK=${KOS_CONTAINER_NETWORK}
KOS_CADVISOR_HEALTH_CHECK_COMMAND=curl -f http://${KOS_CADVISOR_CONTAINER_NAME}:${KOS_CADVISOR_INTERNAL_PORT}/healthz || exit 1
KOS_CADVISOR_HEALTH_CHECK_INTERVAL=30s
KOS_CADVISOR_HEALTH_CHECK_TIMEOUT=10s
KOS_CADVISOR_HEALTH_CHECK_RETRIES=3

# --- Workflow & Development ---
KOS_N8N_CONTAINER_NAME=kos-n8n
KOS_N8N_RESTART_POLICY=unless-stopped
KOS_N8N_NETWORK=${KOS_CONTAINER_NETWORK}
KOS_N8N_WEBHOOK_URL=http://${KOS_N8N_CONTAINER_NAME}:${KOS_N8N_INTERNAL_PORT}/
KOS_N8N_BASIC_AUTH_USER=${KOS_ADMIN_USER}
KOS_N8N_BASIC_AUTH_PASSWORD=${KOS_ADMIN_PASSWORD}
KOS_N8N_DB_TYPE=postgresdb
KOS_N8N_DB_POSTGRESDB_HOST=${KOS_POSTGRES_CONTAINER_NAME}
KOS_N8N_DB_POSTGRESDB_PORT=${KOS_POSTGRES_INTERNAL_PORT}
KOS_N8N_DB_POSTGRESDB_DATABASE=n8n
KOS_N8N_DB_POSTGRESDB_USER=${KOS_ADMIN_USER}
KOS_N8N_DB_POSTGRESDB_PASSWORD=${KOS_ADMIN_PASSWORD}
KOS_N8N_HEALTH_CHECK_COMMAND=curl -f http://${KOS_N8N_CONTAINER_NAME}:${KOS_N8N_INTERNAL_PORT} || exit 1
KOS_N8N_HEALTH_CHECK_INTERVAL=30s
KOS_N8N_HEALTH_CHECK_TIMEOUT=10s
KOS_N8N_HEALTH_CHECK_RETRIES=3

KOS_PENPOT_CONTAINER_NAME=kos-penpot
KOS_PENPOT_RESTART_POLICY=unless-stopped
KOS_PENPOT_NETWORK=${KOS_CONTAINER_NETWORK}
KOS_PENPOT_DATABASE_URI=postgresql://${KOS_ADMIN_USER}:${KOS_ADMIN_PASSWORD}@${KOS_POSTGRES_CONTAINER_NAME}:${KOS_POSTGRES_INTERNAL_PORT}/penpot
KOS_PENPOT_REDIS_URI=redis://${KOS_REDIS_CONTAINER_NAME}:${KOS_REDIS_INTERNAL_PORT}/0
KOS_PENPOT_ADMIN_USER=${KOS_ADMIN_USER}
KOS_PENPOT_ADMIN_PASSWORD=${KOS_ADMIN_PASSWORD}
KOS_PENPOT_HEALTH_CHECK_COMMAND=curl -f http://${KOS_PENPOT_CONTAINER_NAME}:${KOS_PENPOT_INTERNAL_PORT} || exit 1
KOS_PENPOT_HEALTH_CHECK_INTERVAL=30s
KOS_PENPOT_HEALTH_CHECK_TIMEOUT=10s
KOS_PENPOT_HEALTH_CHECK_RETRIES=3

KOS_BROWSERUSE_CONTAINER_NAME=kos-browseruse
KOS_BROWSERUSE_RESTART_POLICY=unless-stopped
KOS_BROWSERUSE_NETWORK=${KOS_CONTAINER_NETWORK}
KOS_BROWSERUSE_API_KEY=${KOS_ADMIN_PASSWORD}
KOS_BROWSERUSE_HEALTH_CHECK_COMMAND=curl -f http://${KOS_BROWSERUSE_CONTAINER_NAME}:${KOS_BROWSERUSE_INTERNAL_PORT} || exit 1
KOS_BROWSERUSE_HEALTH_CHECK_INTERVAL=30s
KOS_BROWSERUSE_HEALTH_CHECK_TIMEOUT=10s
KOS_BROWSERUSE_HEALTH_CHECK_RETRIES=3

KOS_CONTEXT7_CONTAINER_NAME=kos-context7
KOS_CONTEXT7_RESTART_POLICY=unless-stopped
KOS_CONTEXT7_NETWORK=${KOS_CONTAINER_NETWORK}
KOS_CONTEXT7_API_KEY=${KOS_ADMIN_PASSWORD}
KOS_CONTEXT7_DATABASE_URL=postgresql://${KOS_ADMIN_USER}:${KOS_ADMIN_PASSWORD}@${KOS_POSTGRES_CONTAINER_NAME}:${KOS_POSTGRES_INTERNAL_PORT}/context7
KOS_CONTEXT7_HEALTH_CHECK_COMMAND=curl -f http://${KOS_CONTEXT7_CONTAINER_NAME}:${KOS_CONTEXT7_INTERNAL_PORT} || exit 1
KOS_CONTEXT7_HEALTH_CHECK_INTERVAL=30s
KOS_CONTEXT7_HEALTH_CHECK_TIMEOUT=10s
KOS_CONTEXT7_HEALTH_CHECK_RETRIES=3

KOS_CODIUM_CONTAINER_NAME=kos-codium
KOS_CODIUM_RESTART_POLICY=unless-stopped
KOS_CODIUM_NETWORK=${KOS_CONTAINER_NETWORK}
KOS_CODIUM_HEALTH_CHECK_COMMAND=curl -f http://${KOS_CODIUM_CONTAINER_NAME}:${KOS_CODIUM_INTERNAL_PORT} || exit 1
KOS_CODIUM_HEALTH_CHECK_INTERVAL=30s
KOS_CODIUM_HEALTH_CHECK_TIMEOUT=10s
KOS_CODIUM_HEALTH_CHECK_RETRIES=3

KOS_GITEA_CONTAINER_NAME=kos-gitea
KOS_GITEA_RESTART_POLICY=unless-stopped
KOS_GITEA_NETWORK=${KOS_CONTAINER_NETWORK}
KOS_GITEA_HEALTH_CHECK_COMMAND=curl -f http://${KOS_GITEA_CONTAINER_NAME}:${KOS_GITEA_INTERNAL_PORT} || exit 1
KOS_GITEA_HEALTH_CHECK_INTERVAL=30s
KOS_GITEA_HEALTH_CHECK_TIMEOUT=10s
KOS_GITEA_HEALTH_CHECK_RETRIES=3

KOS_SUPABASE_CONTAINER_NAME=kos-supabase
KOS_SUPABASE_RESTART_POLICY=unless-stopped
KOS_SUPABASE_NETWORK=${KOS_CONTAINER_NETWORK}
KOS_SUPABASE_HEALTH_CHECK_COMMAND=curl -f http://${KOS_SUPABASE_CONTAINER_NAME}:${KOS_SUPABASE_STUDIO_INTERNAL_PORT} || exit 1
KOS_SUPABASE_HEALTH_CHECK_INTERVAL=30s
KOS_SUPABASE_HEALTH_CHECK_TIMEOUT=10s
KOS_SUPABASE_HEALTH_CHECK_RETRIES=3

KOS_NEXTCLOUD_CONTAINER_NAME=kos-nextcloud
KOS_NEXTCLOUD_RESTART_POLICY=unless-stopped
KOS_NEXTCLOUD_NETWORK=${KOS_CONTAINER_NETWORK}
KOS_NEXTCLOUD_ADMIN_USER=${KOS_ADMIN_USER}
KOS_NEXTCLOUD_ADMIN_PASSWORD=${KOS_ADMIN_PASSWORD}
KOS_NEXTCLOUD_DB_HOST=${KOS_POSTGRES_CONTAINER_NAME}
KOS_NEXTCLOUD_DB_PORT=${KOS_POSTGRES_INTERNAL_PORT}
KOS_NEXTCLOUD_DB_NAME=nextcloud
KOS_NEXTCLOUD_DB_TYPE=pgsql
KOS_NEXTCLOUD_DB_PASSWORD=${KOS_ADMIN_PASSWORD}
KOS_NEXTCLOUD_HEALTH_CHECK_COMMAND=curl -f http://${KOS_NEXTCLOUD_CONTAINER_NAME}:${KOS_NEXTCLOUD_INTERNAL_PORT}/status.php || exit 1
KOS_NEXTCLOUD_HEALTH_CHECK_INTERVAL=30s
KOS_NEXTCLOUD_HEALTH_CHECK_TIMEOUT=10s
KOS_NEXTCLOUD_HEALTH_CHECK_RETRIES=3

# --- Supabase Studio ---
KOS_SUPABASE_STUDIO_CONTAINER_NAME=kos-supabase-studio
KOS_SUPABASE_STUDIO_IMAGE=supabase/studio:latest
KOS_SUPABASE_STUDIO_NETWORK=${KOS_CONTAINER_NETWORK}
KOS_SUPABASE_STUDIO_RESTART_POLICY=unless-stopped
KOS_SUPABASE_STUDIO_HEALTH_CHECK_COMMAND=curl --fail http://{KOS_SUPABASE_CONTAINER_NAME}:${KOS_SUPABASE_STUDIO_INTERNAL_PORT}/ || exit 1
KOS_SUPABASE_STUDIO_HEALTH_CHECK_INTERVAL=30s
KOS_SUPABASE_STUDIO_HEALTH_CHECK_TIMEOUT=10s
KOS_SUPABASE_STUDIO_HEALTH_CHECK_RETRIES=3

# --- Penpot Backend ---
KOS_PENPOT_BACKEND_IMAGE=penpotapp/backend:latest
KOS_PENPOT_BACKEND_CONTAINER_NAME=kos-penpot-backend
KOS_PENPOT_BACKEND_EXTERNAL_PORT=6060
KOS_PENPOT_BACKEND_INTERNAL_PORT=6060
KOS_PENPOT_BACKEND_RESTART_POLICY=unless-stopped
KOS_PENPOT_BACKEND_NETWORK=${KOS_CONTAINER_NETWORK}
KOS_PENPOT_BACKEND_HEALTH_CHECK_COMMAND=curl -f http://${KOS_PENPOT_BACKEND_CONTAINER_NAME}:${KOS_PENPOT_BACKEND_INTERNAL_PORT}/api/health || exit 1
KOS_PENPOT_BACKEND_HEALTH_CHECK_INTERVAL=30s
KOS_PENPOT_BACKEND_HEALTH_CHECK_RETRIES=3
KOS_PENPOT_BACKEND_HEALTH_CHECK_TIMEOUT=10s
KOS_PENPOT_BACKEND_DATABASE_URI=postgresql://${KOS_ADMIN_USER}:${KOS_ADMIN_PASSWORD}@${KOS_POSTGRES_CONTAINER_NAME}:${KOS_POSTGRES_INTERNAL_PORT}/penpot
KOS_PENPOT_BACKEND_REDIS_URI=redis://${KOS_REDIS_CONTAINER_NAME}:${KOS_REDIS_INTERNAL_PORT}/0
KOS_PENPOT_BACKEND_PUBLIC_URI=http://localhost:${KOS_PENPOT_BACKEND_EXTERNAL_PORT}
KOS_PENPOT_BACKEND_SECRET_KEY=changeme
KOS_PENPOT_BACKEND_FLAGS=enable-registration