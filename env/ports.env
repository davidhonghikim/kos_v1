# =============================================================================
# kOS Centralized Port and Container Management
# =============================================================================
# All ports, container names, and network settings are defined here for clarity.
# =============================================================================

# --- PROJECT CONFIGURATION ---
KOS_PROJECT_NAME=kos

# --- ADMIN CREDENTIALS (CENTRALIZED - EDIT THESE ONCE FOR ALL SERVICES) ---
KOS_ADMIN_USER=kosadmin
KOS_ADMIN_PASSWORD=kos30437
KOS_ADMIN_EMAIL=admin@kos.local

# --- NETWORK CONFIGURATION ---
KOS_DEFAULT_HOST=localhost
KOS_CONTAINER_NETWORK=kos-network
KOS_NETWORK_DRIVER=bridge
KOS_NETWORK_SUBNET=172.20.0.0/16
KOS_OLLAMA_NETWORK_SUBNET=172.21.0.0/16
KOS_OPENWEBUI_NETWORK_SUBNET=172.22.0.0/16

# --- CONTAINER NAMES ---
KOS_ADMIN_PANEL_CONTAINER_NAME=kos-admin-panel
KOS_APP_CONTAINER_NAME=kos-app
KOS_ARTIFACT_MANAGER_CONTAINER_NAME=kos-artifact-manager
KOS_AUTOMATIC1111_CONTAINER_NAME=kos-automatic1111
KOS_BROWSERUSE_CONTAINER_NAME=kos-browseruse
KOS_CADVISOR_CONTAINER_NAME=kos-cadvisor
KOS_CODIUM_CONTAINER_NAME=kos-codium
KOS_COMFYUI_CONTAINER_NAME=kos-comfyui
KOS_CONTEXT7_CONTAINER_NAME=kos-context7
KOS_ELASTICSEARCH_CONTAINER_NAME=kos-elasticsearch
KOS_GITEA_CONTAINER_NAME=kos-gitea
KOS_GRAFANA_CONTAINER_NAME=kos-grafana
KOS_MINIO_CONTAINER_NAME=kos-minio
KOS_MONGO_CONTAINER_NAME=kos-mongodb
KOS_MONGO_EXPRESS_CONTAINER_NAME=kos-mongo-express
KOS_N8N_CONTAINER_NAME=kos-n8n
KOS_NEO4J_CONTAINER_NAME=kos-neo4j
KOS_NEXTCLOUD_CONTAINER_NAME=kos-nextcloud
KOS_NGINX_CONTAINER_NAME=kos-nginx
KOS_OLLAMA_CONTAINER_NAME=kos-ollama
KOS_PENPOT_CONTAINER_NAME=kos-penpot
KOS_PGADMIN_CONTAINER_NAME=kos-pgadmin
KOS_POSTGRES_CONTAINER_NAME=kos-postgres
KOS_PROMETHEUS_CONTAINER_NAME=kos-prometheus
KOS_PROMPT_MANAGER_CONTAINER_NAME=kos-prompt-manager
KOS_REDIS_CONTAINER_NAME=kos-redis
KOS_REDIS_COMMANDER_CONTAINER_NAME=kos-redis-commander
KOS_REGISTRY_CONTAINER_NAME=kos-registry
KOS_WEAVIATE_CONTAINER_NAME=kos-weaviate

# --- CORE SERVICE PORTS ---
KOS_API_EXTERNAL_PORT=8000
KOS_API_INTERNAL_PORT=8000

KOS_FRONTEND_EXTERNAL_PORT=3000
KOS_FRONTEND_INTERNAL_PORT=3000

KOS_NGINX_EXTERNAL_PORT=80
KOS_NGINX_INTERNAL_PORT=80
KOS_NGINX_SSL_EXTERNAL_PORT=443
KOS_NGINX_SSL_INTERNAL_PORT=443

# --- DATABASE SERVICE PORTS ---
KOS_POSTGRES_EXTERNAL_PORT=5432
KOS_POSTGRES_INTERNAL_PORT=5432
KOS_PGADMIN_EXTERNAL_PORT=5433
KOS_PGADMIN_INTERNAL_PORT=80

KOS_REDIS_EXTERNAL_PORT=6379
KOS_REDIS_INTERNAL_PORT=6379
KOS_REDIS_COMMANDER_EXTERNAL_PORT=6380
KOS_REDIS_COMMANDER_INTERNAL_PORT=8081

KOS_MONGO_EXTERNAL_PORT=27017
KOS_MONGO_INTERNAL_PORT=27017
KOS_MONGO_EXPRESS_EXTERNAL_PORT=27018
KOS_MONGO_EXPRESS_INTERNAL_PORT=8081

KOS_NEO4J_EXTERNAL_PORT=7687
KOS_NEO4J_INTERNAL_PORT=7687
KOS_NEO4J_HTTP_EXTERNAL_PORT=7474
KOS_NEO4J_HTTP_INTERNAL_PORT=7474

# --- KOS APP-SPECIFIC SERVICE PORTS (Sequential) ---
KOS_ADMIN_PANEL_EXTERNAL_PORT=9003
KOS_ADMIN_PANEL_INTERNAL_PORT=9003

KOS_REGISTRY_EXTERNAL_PORT=5000
KOS_REGISTRY_INTERNAL_PORT=5000

KOS_PROMPT_MANAGER_EXTERNAL_PORT=3008
KOS_PROMPT_MANAGER_INTERNAL_PORT=8000

KOS_ARTIFACT_MANAGER_EXTERNAL_PORT=3009
KOS_ARTIFACT_MANAGER_INTERNAL_PORT=8000

# --- SELF-HOSTED SERVICE PORTS ---
KOS_NEXTCLOUD_EXTERNAL_PORT=8083
KOS_NEXTCLOUD_INTERNAL_PORT=8083

# --- DEVELOPMENT SERVICE PORTS ---
KOS_GITEA_EXTERNAL_PORT=3002
KOS_GITEA_INTERNAL_PORT=3000
KOS_GITEA_SSH_EXTERNAL_PORT=2222
KOS_GITEA_SSH_INTERNAL_PORT=22

KOS_OPENWEBUI_EXTERNAL_PORT=3001
KOS_OPENWEBUI_INTERNAL_PORT=8080

KOS_SUPABASE_EXTERNAL_PORT=54321
KOS_SUPABASE_INTERNAL_PORT=5432
KOS_SUPABASE_STUDIO_EXTERNAL_PORT=3003
KOS_SUPABASE_STUDIO_INTERNAL_PORT=3000

KOS_BROWSERUSE_EXTERNAL_PORT=3004
KOS_BROWSERUSE_INTERNAL_PORT=3000

KOS_CONTEXT7_EXTERNAL_PORT=3005
KOS_CONTEXT7_INTERNAL_PORT=3000

KOS_CODIUM_EXTERNAL_PORT=3006
KOS_CODIUM_INTERNAL_PORT=8080

# --- MONITORING SERVICE PORTS ---
KOS_PROMETHEUS_EXTERNAL_PORT=9090
KOS_PROMETHEUS_INTERNAL_PORT=9090

KOS_GRAFANA_EXTERNAL_PORT=3007
KOS_GRAFANA_INTERNAL_PORT=3000

KOS_CADVISOR_EXTERNAL_PORT=8081
KOS_CADVISOR_INTERNAL_PORT=8081

# --- STORAGE SERVICE PORTS ---
KOS_ELASTICSEARCH_EXTERNAL_PORT=9200
KOS_ELASTICSEARCH_INTERNAL_PORT=9200
KOS_ELASTICSEARCH_CLUSTER_EXTERNAL_PORT=9300
KOS_ELASTICSEARCH_CLUSTER_INTERNAL_PORT=9300

KOS_WEAVIATE_EXTERNAL_PORT=8082
KOS_WEAVIATE_INTERNAL_PORT=8080

KOS_MINIO_EXTERNAL_PORT=9000
KOS_MINIO_INTERNAL_PORT=9000
KOS_MINIO_CONSOLE_EXTERNAL_PORT=9001
KOS_MINIO_CONSOLE_INTERNAL_PORT=9001

# --- WORKFLOW SERVICE PORTS ---
KOS_N8N_EXTERNAL_PORT=5678
KOS_N8N_INTERNAL_PORT=5678

KOS_PENPOT_EXTERNAL_PORT=9002
KOS_PENPOT_INTERNAL_PORT=9002

# --- SECURITY SERVICE PORTS ---
KOS_VAULT_EXTERNAL_PORT=8200
KOS_VAULT_INTERNAL_PORT=8200

# --- AI/ML SERVICE PORTS ---
KOS_OLLAMA_EXTERNAL_PORT=11434
KOS_OLLAMA_INTERNAL_PORT=11434

KOS_HUGGINGFACE_EXTERNAL_PORT=8084
KOS_HUGGINGFACE_INTERNAL_PORT=8082

KOS_AUTOMATIC1111_EXTERNAL_PORT=7860
KOS_AUTOMATIC1111_INTERNAL_PORT=7860

KOS_COMFYUI_EXTERNAL_PORT=8188
KOS_COMFYUI_INTERNAL_PORT=8188

# --- HEALTH CHECK AND SERVICE CONFIGURATION ---
# API Service
KOS_API_HEALTH_CHECK_ENABLED=true
KOS_API_HEALTH_CHECK_INTERVAL=30s
KOS_API_HEALTH_CHECK_TIMEOUT=10s
KOS_API_HEALTH_CHECK_RETRIES=3
KOS_API_HEALTH_CHECK_COMMAND=curl -f http://${KOS_DEFAULT_HOST}:${KOS_API_INTERNAL_PORT}/health || exit 1
KOS_API_RESTART_POLICY=unless-stopped
KOS_API_NETWORK=kos-network
KOS_API_DEFAULT_VOLUME=kos-api-data:/data

# Frontend Service
KOS_FRONTEND_HEALTH_CHECK_ENABLED=true
KOS_FRONTEND_HEALTH_CHECK_INTERVAL=30s
KOS_FRONTEND_HEALTH_CHECK_TIMEOUT=10s
KOS_FRONTEND_HEALTH_CHECK_RETRIES=3
KOS_FRONTEND_HEALTH_CHECK_COMMAND=curl -f http://${KOS_DEFAULT_HOST}:${KOS_FRONTEND_INTERNAL_PORT} || exit 1
KOS_FRONTEND_RESTART_POLICY=unless-stopped
KOS_FRONTEND_NETWORK=kos-network
KOS_FRONTEND_DEFAULT_VOLUME=kos-frontend-data:/data

# Nginx Service
KOS_NGINX_HEALTH_CHECK_ENABLED=true
KOS_NGINX_HEALTH_CHECK_INTERVAL=30s
KOS_NGINX_HEALTH_CHECK_TIMEOUT=10s
KOS_NGINX_HEALTH_CHECK_RETRIES=3
KOS_NGINX_HEALTH_CHECK_COMMAND=curl -f http://${KOS_DEFAULT_HOST}:${KOS_NGINX_INTERNAL_PORT} || exit 1
KOS_NGINX_RESTART_POLICY=unless-stopped
KOS_NGINX_NETWORK=kos-network

# PostgreSQL Service
KOS_POSTGRES_HEALTH_CHECK_ENABLED=true
KOS_POSTGRES_HEALTH_CHECK_INTERVAL=30s
KOS_POSTGRES_HEALTH_CHECK_TIMEOUT=10s
KOS_POSTGRES_HEALTH_CHECK_RETRIES=3
KOS_POSTGRES_HEALTH_CHECK_COMMAND=pg_isready -U ${KOS_POSTGRES_USER} -d ${KOS_POSTGRES_DB}
KOS_POSTGRES_RESTART_POLICY=unless-stopped
KOS_POSTGRES_NETWORK=kos-network
KOS_POSTGRES_DEFAULT_VOLUME=kos-postgres-data:/var/lib/postgresql/data

# Redis Service
KOS_REDIS_HEALTH_CHECK_ENABLED=true
KOS_REDIS_HEALTH_CHECK_INTERVAL=30s
KOS_REDIS_HEALTH_CHECK_TIMEOUT=10s
KOS_REDIS_HEALTH_CHECK_RETRIES=3
KOS_REDIS_HEALTH_CHECK_COMMAND=redis-cli ping | grep PONG
KOS_REDIS_RESTART_POLICY=unless-stopped
KOS_REDIS_NETWORK=kos-network
KOS_REDIS_DEFAULT_VOLUME=kos-redis-data:/data

# MinIO Service
KOS_MINIO_HEALTH_CHECK_ENABLED=true
KOS_MINIO_HEALTH_CHECK_INTERVAL=30s
KOS_MINIO_HEALTH_CHECK_TIMEOUT=10s
KOS_MINIO_HEALTH_CHECK_RETRIES=3
KOS_MINIO_HEALTH_CHECK_COMMAND=curl -f http://${KOS_DEFAULT_HOST}:${KOS_MINIO_INTERNAL_PORT}/minio/health/live || exit 1
KOS_MINIO_RESTART_POLICY=unless-stopped
KOS_MINIO_NETWORK=kos-network
KOS_MINIO_DEFAULT_VOLUME=kos-minio-data:/data

# Elasticsearch Service
KOS_ELASTICSEARCH_HEALTH_CHECK_ENABLED=true
KOS_ELASTICSEARCH_HEALTH_CHECK_INTERVAL=30s
KOS_ELASTICSEARCH_HEALTH_CHECK_TIMEOUT=10s
KOS_ELASTICSEARCH_HEALTH_CHECK_RETRIES=3
KOS_ELASTICSEARCH_HEALTH_CHECK_COMMAND=curl -f http://${KOS_DEFAULT_HOST}:${KOS_ELASTICSEARCH_INTERNAL_PORT}/_cluster/health || exit 1
KOS_ELASTICSEARCH_RESTART_POLICY=unless-stopped
KOS_ELASTICSEARCH_NETWORK=kos-network
KOS_ELASTICSEARCH_DEFAULT_VOLUME=kos-elasticsearch-data:/usr/share/elasticsearch/data

# Weaviate Service
KOS_WEAVIATE_HEALTH_CHECK_ENABLED=true
KOS_WEAVIATE_HEALTH_CHECK_INTERVAL=30s
KOS_WEAVIATE_HEALTH_CHECK_TIMEOUT=10s
KOS_WEAVIATE_HEALTH_CHECK_RETRIES=3
KOS_WEAVIATE_HEALTH_CHECK_COMMAND=curl -f http://${KOS_DEFAULT_HOST}:${KOS_WEAVIATE_INTERNAL_PORT}/v1/.well-known/ready || exit 1
KOS_WEAVIATE_RESTART_POLICY=unless-stopped
KOS_WEAVIATE_NETWORK=kos-network
KOS_WEAVIATE_DEFAULT_VOLUME=kos-weaviate-data:/var/lib/weaviate

# Nextcloud Service
KOS_NEXTCLOUD_HEALTH_CHECK_ENABLED=true
KOS_NEXTCLOUD_HEALTH_CHECK_INTERVAL=30s
KOS_NEXTCLOUD_HEALTH_CHECK_TIMEOUT=10s
KOS_NEXTCLOUD_HEALTH_CHECK_RETRIES=3
KOS_NEXTCLOUD_HEALTH_CHECK_COMMAND=curl -f http://${KOS_DEFAULT_HOST}:${KOS_NEXTCLOUD_INTERNAL_PORT}/status.php || exit 1
KOS_NEXTCLOUD_RESTART_POLICY=unless-stopped
KOS_NEXTCLOUD_NETWORK=kos-network
KOS_NEXTCLOUD_DEFAULT_VOLUME=kos-nextcloud-data:/var/www/html

# pgAdmin Service
KOS_PGADMIN_HEALTH_CHECK_ENABLED=true
KOS_PGADMIN_HEALTH_CHECK_INTERVAL=30s
KOS_PGADMIN_HEALTH_CHECK_TIMEOUT=10s
KOS_PGADMIN_HEALTH_CHECK_RETRIES=3
KOS_PGADMIN_HEALTH_CHECK_COMMAND=curl -f http://${KOS_DEFAULT_HOST}:${KOS_PGADMIN_INTERNAL_PORT}/misc/ping || exit 1
KOS_PGADMIN_RESTART_POLICY=unless-stopped
KOS_PGADMIN_NETWORK=kos-network

# MongoDB Service
KOS_MONGO_HEALTH_CHECK_ENABLED=true
KOS_MONGO_HEALTH_CHECK_INTERVAL=30s
KOS_MONGO_HEALTH_CHECK_TIMEOUT=10s
KOS_MONGO_HEALTH_CHECK_RETRIES=3
KOS_MONGO_HEALTH_CHECK_COMMAND=mongo --eval "db.adminCommand('ping')"
KOS_MONGO_RESTART_POLICY=unless-stopped
KOS_MONGO_NETWORK=kos-network
KOS_MONGO_DEFAULT_VOLUME=kos-mongo-data:/data/db

# Mongo Express Service
KOS_MONGO_EXPRESS_HEALTH_CHECK_ENABLED=true
KOS_MONGO_EXPRESS_HEALTH_CHECK_INTERVAL=30s
KOS_MONGO_EXPRESS_HEALTH_CHECK_TIMEOUT=10s
KOS_MONGO_EXPRESS_HEALTH_CHECK_RETRIES=3
KOS_MONGO_EXPRESS_HEALTH_CHECK_COMMAND=curl -f http://${KOS_DEFAULT_HOST}:${KOS_MONGO_EXPRESS_INTERNAL_PORT} || exit 1
KOS_MONGO_EXPRESS_RESTART_POLICY=unless-stopped
KOS_MONGO_EXPRESS_NETWORK=kos-network

# Redis Commander Service
KOS_REDIS_COMMANDER_HEALTH_CHECK_ENABLED=true
KOS_REDIS_COMMANDER_HEALTH_CHECK_INTERVAL=30s
KOS_REDIS_COMMANDER_HEALTH_CHECK_TIMEOUT=10s
KOS_REDIS_COMMANDER_HEALTH_CHECK_RETRIES=3
KOS_REDIS_COMMANDER_HEALTH_CHECK_COMMAND=curl -f http://${KOS_DEFAULT_HOST}:${KOS_REDIS_COMMANDER_INTERNAL_PORT} || exit 1
KOS_REDIS_COMMANDER_RESTART_POLICY=unless-stopped
KOS_REDIS_COMMANDER_NETWORK=kos-network

# Neo4j Service
KOS_NEO4J_HEALTH_CHECK_ENABLED=true
KOS_NEO4J_HEALTH_CHECK_INTERVAL=30s
KOS_NEO4J_HEALTH_CHECK_TIMEOUT=10s
KOS_NEO4J_HEALTH_CHECK_RETRIES=3
KOS_NEO4J_HEALTH_CHECK_COMMAND=curl -f http://${KOS_DEFAULT_HOST}:${KOS_NEO4J_INTERNAL_PORT}/browser/ || exit 1
KOS_NEO4J_RESTART_POLICY=unless-stopped
KOS_NEO4J_NETWORK=kos-network
KOS_NEO4J_DEFAULT_VOLUME=kos-neo4j-data:/data

# Grafana Service
KOS_GRAFANA_HEALTH_CHECK_ENABLED=true
KOS_GRAFANA_HEALTH_CHECK_INTERVAL=30s
KOS_GRAFANA_HEALTH_CHECK_TIMEOUT=10s
KOS_GRAFANA_HEALTH_CHECK_RETRIES=3
KOS_GRAFANA_HEALTH_CHECK_COMMAND=curl -f http://${KOS_DEFAULT_HOST}:${KOS_GRAFANA_INTERNAL_PORT}/api/health || exit 1
KOS_GRAFANA_RESTART_POLICY=unless-stopped
KOS_GRAFANA_NETWORK=kos-network
KOS_GRAFANA_DEFAULT_VOLUME=kos-grafana-data:/var/lib/grafana

# Prometheus Service
KOS_PROMETHEUS_HEALTH_CHECK_ENABLED=true
KOS_PROMETHEUS_HEALTH_CHECK_INTERVAL=30s
KOS_PROMETHEUS_HEALTH_CHECK_TIMEOUT=10s
KOS_PROMETHEUS_HEALTH_CHECK_RETRIES=3
KOS_PROMETHEUS_HEALTH_CHECK_COMMAND=curl -f http://${KOS_DEFAULT_HOST}:${KOS_PROMETHEUS_INTERNAL_PORT}/-/healthy || exit 1
KOS_PROMETHEUS_RESTART_POLICY=unless-stopped
KOS_PROMETHEUS_NETWORK=kos-network
KOS_PROMETHEUS_DEFAULT_VOLUME=kos-prometheus-data:/prometheus

# cAdvisor Service
KOS_CADVISOR_HEALTH_CHECK_ENABLED=true
KOS_CADVISOR_HEALTH_CHECK_INTERVAL=30s
KOS_CADVISOR_HEALTH_CHECK_TIMEOUT=10s
KOS_CADVISOR_HEALTH_CHECK_RETRIES=3
KOS_CADVISOR_HEALTH_CHECK_COMMAND=curl -f http://${KOS_DEFAULT_HOST}:${KOS_CADVISOR_INTERNAL_PORT}/healthz || exit 1
KOS_CADVISOR_RESTART_POLICY=unless-stopped
KOS_CADVISOR_NETWORK=kos-network

# Ollama Service
KOS_OLLAMA_HEALTH_CHECK_ENABLED=true
KOS_OLLAMA_HEALTH_CHECK_INTERVAL=30s
KOS_OLLAMA_HEALTH_CHECK_TIMEOUT=10s
KOS_OLLAMA_HEALTH_CHECK_RETRIES=3
KOS_OLLAMA_HEALTH_CHECK_COMMAND=curl -f http://${KOS_DEFAULT_HOST}:${KOS_OLLAMA_INTERNAL_PORT}/api/tags || exit 1
KOS_OLLAMA_RESTART_POLICY=unless-stopped
KOS_OLLAMA_NETWORK=kos-network
KOS_OLLAMA_DEFAULT_VOLUME=kos-ollama-data:/root/.ollama

# OpenWebUI Service
KOS_OPENWEBUI_HEALTH_CHECK_ENABLED=true
KOS_OPENWEBUI_HEALTH_CHECK_INTERVAL=30s
KOS_OPENWEBUI_HEALTH_CHECK_TIMEOUT=10s
KOS_OPENWEBUI_HEALTH_CHECK_RETRIES=3
KOS_OPENWEBUI_HEALTH_CHECK_COMMAND=curl -f http://${KOS_DEFAULT_HOST}:${KOS_OPENWEBUI_INTERNAL_PORT} || exit 1
KOS_OPENWEBUI_RESTART_POLICY=unless-stopped
KOS_OPENWEBUI_NETWORK=kos-network
KOS_OPENWEBUI_DEFAULT_VOLUME=kos-openwebui-data:/app/backend/data

# Huggingface Service
KOS_HUGGINGFACE_HEALTH_CHECK_ENABLED=true
KOS_HUGGINGFACE_HEALTH_CHECK_INTERVAL=30s
KOS_HUGGINGFACE_HEALTH_CHECK_TIMEOUT=10s
KOS_HUGGINGFACE_HEALTH_CHECK_RETRIES=3
KOS_HUGGINGFACE_HEALTH_CHECK_COMMAND=curl -f http://${KOS_DEFAULT_HOST}:${KOS_HUGGINGFACE_INTERNAL_PORT} || exit 1
KOS_HUGGINGFACE_RESTART_POLICY=unless-stopped
KOS_HUGGINGFACE_NETWORK=kos-network
KOS_HUGGINGFACE_DEFAULT_VOLUME=kos-huggingface-data:/app/cache

# Automatic1111 Service
KOS_AUTOMATIC1111_HEALTH_CHECK_ENABLED=true
KOS_AUTOMATIC1111_HEALTH_CHECK_INTERVAL=30s
KOS_AUTOMATIC1111_HEALTH_CHECK_TIMEOUT=10s
KOS_AUTOMATIC1111_HEALTH_CHECK_RETRIES=3
KOS_AUTOMATIC1111_HEALTH_CHECK_COMMAND=curl -f http://${KOS_DEFAULT_HOST}:${KOS_AUTOMATIC1111_INTERNAL_PORT} || exit 1
KOS_AUTOMATIC1111_RESTART_POLICY=unless-stopped
KOS_AUTOMATIC1111_NETWORK=kos-network
KOS_AUTOMATIC1111_DEFAULT_VOLUME=kos-automatic1111-data:/app

# ComfyUI Service
KOS_COMFYUI_HEALTH_CHECK_ENABLED=true
KOS_COMFYUI_HEALTH_CHECK_INTERVAL=30s
KOS_COMFYUI_HEALTH_CHECK_TIMEOUT=10s
KOS_COMFYUI_HEALTH_CHECK_RETRIES=3
KOS_COMFYUI_HEALTH_CHECK_COMMAND=curl -f http://${KOS_DEFAULT_HOST}:${KOS_COMFYUI_INTERNAL_PORT} || exit 1
KOS_COMFYUI_RESTART_POLICY=unless-stopped
KOS_COMFYUI_NETWORK=kos-network
KOS_COMFYUI_DEFAULT_VOLUME=kos-comfyui-data:/app

# InvokeAI Service
KOS_INVOKEAI_HEALTH_CHECK_ENABLED=true
KOS_INVOKEAI_HEALTH_CHECK_INTERVAL=30s
KOS_INVOKEAI_HEALTH_CHECK_TIMEOUT=10s
KOS_INVOKEAI_HEALTH_CHECK_RETRIES=3
KOS_INVOKEAI_HEALTH_CHECK_COMMAND=curl -f http://${KOS_DEFAULT_HOST}:${KOS_INVOKEAI_INTERNAL_PORT} || exit 1
KOS_INVOKEAI_RESTART_POLICY=unless-stopped
KOS_INVOKEAI_NETWORK=kos-network
KOS_INVOKEAI_DEFAULT_VOLUME=kos-invokeai-data:/app

# n8n Service
KOS_N8N_HEALTH_CHECK_ENABLED=true
KOS_N8N_HEALTH_CHECK_INTERVAL=30s
KOS_N8N_HEALTH_CHECK_TIMEOUT=10s
KOS_N8N_HEALTH_CHECK_RETRIES=3
KOS_N8N_HEALTH_CHECK_COMMAND=curl -f http://${KOS_DEFAULT_HOST}:${KOS_N8N_INTERNAL_PORT} || exit 1
KOS_N8N_RESTART_POLICY=unless-stopped
KOS_N8N_NETWORK=kos-network
KOS_N8N_DEFAULT_VOLUME=kos-n8n-data:/home/node/.n8n

# Penpot Service
KOS_PENPOT_HEALTH_CHECK_ENABLED=true
KOS_PENPOT_HEALTH_CHECK_INTERVAL=30s
KOS_PENPOT_HEALTH_CHECK_TIMEOUT=10s
KOS_PENPOT_HEALTH_CHECK_RETRIES=3
KOS_PENPOT_HEALTH_CHECK_COMMAND=curl -f http://${KOS_DEFAULT_HOST}:${KOS_PENPOT_INTERNAL_PORT} || exit 1
KOS_PENPOT_RESTART_POLICY=unless-stopped
KOS_PENPOT_NETWORK=kos-network
KOS_PENPOT_DEFAULT_VOLUME=kos-penpot-data:/data

# Admin Panel Service
KOS_ADMIN_PANEL_HEALTH_CHECK_ENABLED=true
KOS_ADMIN_PANEL_HEALTH_CHECK_INTERVAL=30s
KOS_ADMIN_PANEL_HEALTH_CHECK_TIMEOUT=10s
KOS_ADMIN_PANEL_HEALTH_CHECK_RETRIES=3
KOS_ADMIN_PANEL_HEALTH_CHECK_COMMAND=curl -f http://${KOS_DEFAULT_HOST}:${KOS_ADMIN_PANEL_INTERNAL_PORT}/api/status || exit 1
KOS_ADMIN_PANEL_RESTART_POLICY=unless-stopped
KOS_ADMIN_PANEL_NETWORK=kos-network
KOS_ADMIN_PANEL_DEFAULT_VOLUME=kos-admin-panel-data:/data

# Prompt Manager Service
KOS_PROMPT_MANAGER_HEALTH_CHECK_ENABLED=true
KOS_PROMPT_MANAGER_HEALTH_CHECK_INTERVAL=30s
KOS_PROMPT_MANAGER_HEALTH_CHECK_TIMEOUT=10s
KOS_PROMPT_MANAGER_HEALTH_CHECK_RETRIES=3
KOS_PROMPT_MANAGER_HEALTH_CHECK_COMMAND=curl -f http://${KOS_DEFAULT_HOST}:${KOS_PROMPT_MANAGER_INTERNAL_PORT}/health || exit 1
KOS_PROMPT_MANAGER_RESTART_POLICY=unless-stopped
KOS_PROMPT_MANAGER_NETWORK=kos-network
KOS_PROMPT_MANAGER_DEFAULT_VOLUME=kos-prompt-manager-data:/data

# Artifact Manager Service
KOS_ARTIFACT_MANAGER_HEALTH_CHECK_ENABLED=true
KOS_ARTIFACT_MANAGER_HEALTH_CHECK_INTERVAL=30s
KOS_ARTIFACT_MANAGER_HEALTH_CHECK_TIMEOUT=10s
KOS_ARTIFACT_MANAGER_HEALTH_CHECK_RETRIES=3
KOS_ARTIFACT_MANAGER_HEALTH_CHECK_COMMAND=curl -f http://${KOS_DEFAULT_HOST}:${KOS_ARTIFACT_MANAGER_INTERNAL_PORT}/health || exit 1
KOS_ARTIFACT_MANAGER_RESTART_POLICY=unless-stopped
KOS_ARTIFACT_MANAGER_NETWORK=kos-network
KOS_ARTIFACT_MANAGER_DEFAULT_VOLUME=kos-artifact-manager-data:/data

# Registry Service
KOS_REGISTRY_HEALTH_CHECK_ENABLED=true
KOS_REGISTRY_HEALTH_CHECK_INTERVAL=30s
KOS_REGISTRY_HEALTH_CHECK_TIMEOUT=10s
KOS_REGISTRY_HEALTH_CHECK_RETRIES=3
KOS_REGISTRY_HEALTH_CHECK_COMMAND=curl -f http://${KOS_DEFAULT_HOST}:${KOS_REGISTRY_INTERNAL_PORT}/v2/ || exit 1
KOS_REGISTRY_RESTART_POLICY=unless-stopped
KOS_REGISTRY_NETWORK=kos-network
KOS_REGISTRY_DEFAULT_VOLUME=kos-registry-data:/var/lib/registry

# Vault Service
KOS_VAULT_HEALTH_CHECK_ENABLED=true
KOS_VAULT_HEALTH_CHECK_INTERVAL=30s
KOS_VAULT_HEALTH_CHECK_TIMEOUT=10s
KOS_VAULT_HEALTH_CHECK_RETRIES=3
KOS_VAULT_HEALTH_CHECK_COMMAND=curl -f http://${KOS_DEFAULT_HOST}:${KOS_VAULT_INTERNAL_PORT}/v1/sys/health || exit 1
KOS_VAULT_RESTART_POLICY=unless-stopped
KOS_VAULT_NETWORK=kos-network
KOS_VAULT_DEFAULT_VOLUME=kos-vault-data:/vault/file

# Gitea Service
KOS_GITEA_HEALTH_CHECK_ENABLED=true
KOS_GITEA_HEALTH_CHECK_INTERVAL=30s
KOS_GITEA_HEALTH_CHECK_TIMEOUT=10s
KOS_GITEA_HEALTH_CHECK_RETRIES=3
KOS_GITEA_HEALTH_CHECK_COMMAND=curl -f http://${KOS_DEFAULT_HOST}:${KOS_GITEA_INTERNAL_PORT} || exit 1
KOS_GITEA_RESTART_POLICY=unless-stopped
KOS_GITEA_NETWORK=kos-network
KOS_GITEA_DEFAULT_VOLUME=kos-gitea-data:/data

# Supabase Service
KOS_SUPABASE_HEALTH_CHECK_ENABLED=true
KOS_SUPABASE_HEALTH_CHECK_INTERVAL=30s
KOS_SUPABASE_HEALTH_CHECK_TIMEOUT=10s
KOS_SUPABASE_HEALTH_CHECK_RETRIES=3
KOS_SUPABASE_HEALTH_CHECK_COMMAND=curl -f http://${KOS_DEFAULT_HOST}:${KOS_SUPABASE_INTERNAL_PORT} || exit 1
KOS_SUPABASE_RESTART_POLICY=unless-stopped
KOS_SUPABASE_NETWORK=kos-network
KOS_SUPABASE_DEFAULT_VOLUME=kos-supabase-data:/var/lib/postgresql/data

# Browseruse Service
KOS_BROWSERUSE_HEALTH_CHECK_ENABLED=true
KOS_BROWSERUSE_HEALTH_CHECK_INTERVAL=30s
KOS_BROWSERUSE_HEALTH_CHECK_TIMEOUT=10s
KOS_BROWSERUSE_HEALTH_CHECK_RETRIES=3
KOS_BROWSERUSE_HEALTH_CHECK_COMMAND=curl -f http://${KOS_DEFAULT_HOST}:${KOS_BROWSERUSE_INTERNAL_PORT} || exit 1
KOS_BROWSERUSE_RESTART_POLICY=unless-stopped
KOS_BROWSERUSE_NETWORK=kos-network
KOS_BROWSERUSE_DEFAULT_VOLUME=kos-browseruse-data:/app/workspace

# Context7 Service
KOS_CONTEXT7_ENABLE=true
KOS_CONTEXT7_HEALTH_CHECK_ENABLED=true
KOS_CONTEXT7_HEALTH_CHECK_INTERVAL=30s
KOS_CONTEXT7_HEALTH_CHECK_TIMEOUT=10s
KOS_CONTEXT7_HEALTH_CHECK_RETRIES=3
KOS_CONTEXT7_HEALTH_CHECK_COMMAND=curl -f http://${KOS_DEFAULT_HOST}:${KOS_CONTEXT7_INTERNAL_PORT} || exit 1
KOS_CONTEXT7_RESTART_POLICY=unless-stopped
KOS_CONTEXT7_NETWORK=kos-network
KOS_CONTEXT7_DEFAULT_VOLUME=kos-context7-data:/app/data

# Codium Service
KOS_CODIUM_HEALTH_CHECK_ENABLED=true
KOS_CODIUM_HEALTH_CHECK_INTERVAL=30s
KOS_CODIUM_HEALTH_CHECK_TIMEOUT=10s
KOS_CODIUM_HEALTH_CHECK_RETRIES=3
KOS_CODIUM_HEALTH_CHECK_COMMAND=curl -f http://${KOS_DEFAULT_HOST}:${KOS_CODIUM_INTERNAL_PORT} || exit 1
KOS_CODIUM_RESTART_POLICY=unless-stopped
KOS_CODIUM_NETWORK=kos-network
KOS_CODIUM_DEFAULT_VOLUME=kos-codium-data:/home/coder/project

# --- PATH CONFIGURATION ---
KOS_SRC_PATH=../../src
KOS_CONFIG_PATH=../../config
KOS_PUBLIC_PATH=../../public
KOS_LOGS_PATH=../../logs
KOS_DATA_PATH=../../data
KOS_INIT_SCRIPTS_PATH=../../init-scripts