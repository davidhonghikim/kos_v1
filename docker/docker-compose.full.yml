name: kos-v1
services:
  automatic1111:
    image: ashleykza/stable-diffusion-webui:latest
    container_name: kos-automatic1111
    ports:
    - 7860:7860
    environment:
    - AUTOMATIC1111_CATEGORY=ai
    - AUTOMATIC1111_COMMANDLINE_ARGS=--listen --port 7860 --ckpt-dir "/models/checkpoints"
      --vae-dir "/models/vae" --embeddings-dir "/models/embeddings" --hypernetwork-dir
      "/models/hypernetworks" --lora-dir "/models/loras"
    - AUTOMATIC1111_COMPOSE_GROUP=ai
    - AUTOMATIC1111_CONFIG_VOLUME=kos-automatic1111:/config
    - AUTOMATIC1111_CONTAINER_NAME=kos-automatic1111
    - AUTOMATIC1111_DEPENDS_ON=
    - AUTOMATIC1111_ENABLE=true
    - AUTOMATIC1111_EXTENSIONS_VOLUME=kos-models-data:/extensions
    - AUTOMATIC1111_EXTERNAL_PORT=7860
    - AUTOMATIC1111_HEALTH_CHECK_COMMAND=curl -f http://kos-automatic1111:7860 ||
      exit 1
    - AUTOMATIC1111_HEALTH_CHECK_INTERVAL=30s
    - AUTOMATIC1111_HEALTH_CHECK_RETRIES=3
    - AUTOMATIC1111_HEALTH_CHECK_TIMEOUT=10s
    - AUTOMATIC1111_IMAGE=ashleykza/stable-diffusion-webui:latest
    - AUTOMATIC1111_INTERNAL_PORT=7860
    - AUTOMATIC1111_MODELS_VOLUME=//e/ComfyUI_WPN/ComfyUI/models:/models
    - AUTOMATIC1111_NETWORK=kos-network
    - AUTOMATIC1111_OUTPUTS_VOLUME=kos-models-data:/outputs
    - AUTOMATIC1111_PROFILE=core
    - AUTOMATIC1111_RESTART_POLICY=unless-stopped
    - ADMIN_USER=kosadmin
    - ADMIN_PASSWORD=kos30437
    volumes:
    - kos-models-data:/models
    deploy:
      resources:
        reservations:
          devices:
          - driver: nvidia
            count: all
            capabilities:
            - gpu
    networks:
    - kos-network
    restart: unless-stopped
  comfyui:
    image: zhangp365/comfyui:latest
    container_name: kos-comfyui
    ports:
    - 8188:8188
    environment:
    - COMFYUI_CATEGORY=ai
    - COMFYUI_COMPOSE_GROUP=ai
    - COMFYUI_CONFIG_VOLUME=kos-comfyui:/config
    - COMFYUI_CONTAINER_NAME=kos-comfyui
    - COMFYUI_CUSTOM_NODES_VOLUME=kos-comfyui:/custom-nodes
    - COMFYUI_DEPENDS_ON=
    - COMFYUI_ENABLE=true
    - COMFYUI_EXTERNAL_PORT=8188
    - COMFYUI_HEALTH_CHECK_COMMAND=curl -f http://kos-comfyui:8188 || exit 1
    - COMFYUI_HEALTH_CHECK_INTERVAL=30s
    - COMFYUI_HEALTH_CHECK_RETRIES=3
    - COMFYUI_HEALTH_CHECK_TIMEOUT=10s
    - COMFYUI_IMAGE=zhangp365/comfyui:latest
    - COMFYUI_INTERNAL_PORT=8188
    - COMFYUI_MODELS_VOLUME=//e/ComfyUI_WPN/ComfyUI/models:/models
    - COMFYUI_NETWORK=kos-network
    - COMFYUI_OUTPUTS_VOLUME=kos-models-data:/outputs
    - COMFYUI_PROFILE=core
    - COMFYUI_RESTART_POLICY=unless-stopped
    - ADMIN_USER=kosadmin
    - ADMIN_PASSWORD=kos30437
    volumes:
    - kos-models-data:/models
    deploy:
      resources:
        reservations:
          devices:
          - driver: nvidia
            count: all
            capabilities:
            - gpu
    networks:
    - kos-network
    restart: unless-stopped
  ollama:
    image: ollama/ollama:latest
    container_name: kos-ollama
    ports:
    - 11434:11434
    environment:
    - OLLAMA_CATEGORY=ai
    - OLLAMA_COMPOSE_GROUP=ai
    - OLLAMA_CONTAINER_NAME=kos-ollama
    - OLLAMA_DEPENDS_ON=
    - OLLAMA_ENABLE=true
    - OLLAMA_EXTERNAL_PORT=11434
    - OLLAMA_HEALTH_CHECK_COMMAND=curl -f http://kos-ollama:11434/api/tags || exit
      1
    - OLLAMA_HEALTH_CHECK_INTERVAL=30s
    - OLLAMA_HEALTH_CHECK_RETRIES=3
    - OLLAMA_HEALTH_CHECK_TIMEOUT=10s
    - OLLAMA_IMAGE=ollama/ollama:latest
    - OLLAMA_INTERNAL_PORT=11434
    - OLLAMA_NETWORK=kos-network
    - OLLAMA_PROFILE=core
    - OLLAMA_RESTART_POLICY=unless-stopped
    - OLLAMA_VOLUME=kos-ollama:/data
    - ADMIN_USER=kosadmin
    - ADMIN_PASSWORD=kos30437
    volumes:
    - type: volume
      source: kos-ollama
      target: /data
      volume: {}
    networks:
    - kos-network
    restart: unless-stopped
  openwebui:
    image: ghcr.io/open-webui/open-webui:main
    container_name: kos-openwebui
    ports:
    - 3001:8080
    environment:
    - OPENWEBUI_ADMIN_PASSWORD=kos30437
    - OPENWEBUI_ADMIN_USER=kosadmin
    - OPENWEBUI_CATEGORY=ai
    - OPENWEBUI_COMPOSE_GROUP=ai
    - OPENWEBUI_CONTAINER_NAME=kos-openwebui
    - OPENWEBUI_DEPENDS_ON=ollama
    - OPENWEBUI_ENABLE=true
    - OPENWEBUI_EXTERNAL_PORT=3001
    - OPENWEBUI_HEALTH_CHECK_COMMAND=curl -f http://kos-openwebui:8080 || exit 1
    - OPENWEBUI_HEALTH_CHECK_INTERVAL=30s
    - OPENWEBUI_HEALTH_CHECK_RETRIES=3
    - OPENWEBUI_HEALTH_CHECK_TIMEOUT=10s
    - OPENWEBUI_IMAGE=ghcr.io/open-webui/open-webui:main
    - OPENWEBUI_INTERNAL_PORT=8080
    - OPENWEBUI_NETWORK=kos-network
    - OPENWEBUI_OLLAMA_API_BASE_URL=http://kos-ollama:11434
    - OPENWEBUI_PROFILE=core
    - OPENWEBUI_RESTART_POLICY=unless-stopped
    - OPENWEBUI_VOLUME=kos-openwebui:/data
    - ADMIN_USER=kosadmin
    - ADMIN_PASSWORD=kos30437
    volumes:
    - type: volume
      source: kos-openwebui
      target: /data
      volume: {}
    networks:
    - kos-network
    restart: unless-stopped
    depends_on:
    - ollama
  browseruse:
    image: browseruse/browseruse:latest
    container_name: kos-browseruse
    ports:
    - 3004:3000
    environment:
    - BROWSERUSE_API_KEY=kos30437
    - BROWSERUSE_CATEGORY=dev
    - BROWSERUSE_COMPOSE_GROUP=dev
    - BROWSERUSE_CONTAINER_NAME=kos-browseruse
    - BROWSERUSE_DEPENDS_ON=
    - BROWSERUSE_ENABLE=true
    - BROWSERUSE_EXTERNAL_PORT=3004
    - BROWSERUSE_HEALTH_CHECK_COMMAND=curl -f http://kos-browseruse:3000 || exit 1
    - BROWSERUSE_HEALTH_CHECK_INTERVAL=30s
    - BROWSERUSE_HEALTH_CHECK_RETRIES=3
    - BROWSERUSE_HEALTH_CHECK_TIMEOUT=10s
    - BROWSERUSE_IMAGE=browseruse/browseruse:latest
    - BROWSERUSE_INTERNAL_PORT=3000
    - BROWSERUSE_NETWORK=kos-network
    - BROWSERUSE_PROFILE=dev
    - BROWSERUSE_RESTART_POLICY=unless-stopped
    - BROWSERUSE_VOLUME=kos-browseruse:/data
    - ADMIN_USER=kosadmin
    - ADMIN_PASSWORD=kos30437
    volumes:
    - type: volume
      source: kos-browseruse
      target: /data
      volume: {}
    networks:
    - kos-network
    restart: unless-stopped
  codium:
    image: codercom/code-server:latest
    container_name: kos-codium
    ports:
    - 3006:8080
    environment:
    - CODIUM_AUTH=password
    - CODIUM_CATEGORY=dev
    - CODIUM_COMPOSE_GROUP=dev
    - CODIUM_CONTAINER_NAME=kos-codium
    - CODIUM_DEPENDS_ON=
    - CODIUM_ENABLE=true
    - CODIUM_EXTERNAL_PORT=3006
    - CODIUM_HEALTH_CHECK_COMMAND=curl -f http://kos-codium:8080 || exit 1
    - CODIUM_HEALTH_CHECK_INTERVAL=30s
    - CODIUM_HEALTH_CHECK_RETRIES=3
    - CODIUM_HEALTH_CHECK_TIMEOUT=10s
    - CODIUM_IMAGE=codercom/code-server:latest
    - CODIUM_INTERNAL_PORT=8080
    - CODIUM_NETWORK=kos-network
    - CODIUM_PASSWORD=kos30437
    - CODIUM_PROFILE=dev
    - CODIUM_RESTART_POLICY=unless-stopped
    - CODIUM_VOLUME=kos-codium:/data
    - ADMIN_USER=kosadmin
    - ADMIN_PASSWORD=kos30437
    volumes:
    - type: volume
      source: kos-codium
      target: /data
      volume: {}
    networks:
    - kos-network
    restart: unless-stopped
  context7:
    build:
      context: ..
      dockerfile: docker/context7.Dockerfile
    container_name: kos-context7
    ports:
    - 3005:3000
    environment:
    - CONTEXT7_API_KEY=kos30437
    - CONTEXT7_CATEGORY=dev
    - CONTEXT7_COMPOSE_GROUP=dev
    - CONTEXT7_CONTAINER_NAME=kos-context7
    - CONTEXT7_DATABASE_URL=postgresql://kosadmin:kos30437@kos-postgres:5432/context7
    - CONTEXT7_DEPENDS_ON=
    - CONTEXT7_ENABLE=true
    - CONTEXT7_EXTERNAL_PORT=3005
    - CONTEXT7_HEALTH_CHECK_COMMAND=curl -f http://kos-context7:3000 || exit 1
    - CONTEXT7_HEALTH_CHECK_INTERVAL=30s
    - CONTEXT7_HEALTH_CHECK_RETRIES=3
    - CONTEXT7_HEALTH_CHECK_TIMEOUT=10s
    - CONTEXT7_IMAGE=context7-mcp:latest
    - CONTEXT7_INTERNAL_PORT=3000
    - CONTEXT7_NETWORK=kos-network
    - CONTEXT7_PROFILE=dev
    - CONTEXT7_RESTART_POLICY=unless-stopped
    - CONTEXT7_VOLUME=kos-context7:/data
    - ADMIN_USER=kosadmin
    - ADMIN_PASSWORD=kos30437
    volumes:
    - type: volume
      source: kos-context7
      target: /data
      volume: {}
    networks:
    - kos-network
    restart: unless-stopped
  gitea:
    image: gitea/gitea:latest
    container_name: kos-gitea
    ports:
    - 3002:3000
    - 22:2222
    environment:
    - GITEA_CATEGORY=dev
    - GITEA_COMPOSE_GROUP=dev
    - GITEA_CONFIG_VOLUME=kos-gitea:/config
    - GITEA_CONTAINER_NAME=kos-gitea
    - GITEA_DATA_VOLUME=kos-gitea:/data
    - GITEA_DEPENDS_ON=postgres
    - GITEA_ENABLE=true
    - GITEA_EXTERNAL_PORT=3002
    - GITEA_HEALTH_CHECK_COMMAND=curl -f http://kos-gitea:3000 || exit 1
    - GITEA_HEALTH_CHECK_INTERVAL=30s
    - GITEA_HEALTH_CHECK_RETRIES=3
    - GITEA_HEALTH_CHECK_TIMEOUT=10s
    - GITEA_IMAGE=gitea/gitea:latest
    - GITEA_INTERNAL_PORT=3000
    - GITEA_NETWORK=kos-network
    - GITEA_PROFILE=dev
    - GITEA_REPOS_VOLUME=kos-gitea:/repos
    - GITEA_RESTART_POLICY=unless-stopped
    - GITEA_SSH_EXTERNAL_PORT=22
    - GITEA_SSH_INTERNAL_PORT=2222
    - GITEA_SSH_VOLUME=kos-gitea:/ssh
    - ADMIN_USER=kosadmin
    - ADMIN_PASSWORD=kos30437
    volumes:
    - type: volume
      source: kos-gitea
      target: /config
      volume: {}
    - type: volume
      source: kos-gitea
      target: /data
      volume: {}
    - type: volume
      source: kos-gitea
      target: /repos
      volume: {}
    - type: volume
      source: kos-gitea
      target: /ssh
      volume: {}
    networks:
    - kos-network
    restart: unless-stopped
    depends_on:
    - postgres
  supabase:
    image: supabase/postgres:15.1.0.117
    container_name: kos-supabase
    ports:
    - 54321:5432
    - 3003:3000
    environment:
    - SUPABASE_CATEGORY=dev
    - SUPABASE_CLOUD_ANON_KEY=
    - SUPABASE_CLOUD_ENABLE=false
    - SUPABASE_CLOUD_SERVICE_ROLE_KEY=
    - SUPABASE_CLOUD_URL=
    - SUPABASE_COMPOSE_GROUP=dev
    - SUPABASE_CONTAINER_NAME=kos-supabase
    - SUPABASE_DEPENDS_ON=postgres
    - SUPABASE_ENABLE=true
    - SUPABASE_EXTERNAL_PORT=54321
    - SUPABASE_HEALTH_CHECK_COMMAND=curl -f http://kos-supabase:3000 || exit 1
    - SUPABASE_HEALTH_CHECK_INTERVAL=30s
    - SUPABASE_HEALTH_CHECK_RETRIES=3
    - SUPABASE_HEALTH_CHECK_TIMEOUT=10s
    - SUPABASE_IMAGE=supabase/postgres:15.1.0.117
    - SUPABASE_INTERNAL_PORT=5432
    - SUPABASE_NETWORK=kos-network
    - SUPABASE_PROFILE=core
    - SUPABASE_RESTART_POLICY=unless-stopped
    - SUPABASE_STUDIO_CONTAINER_NAME=kos-supabase-studio
    - SUPABASE_STUDIO_ENABLE=true
    - SUPABASE_STUDIO_EXTERNAL_PORT=3003
    - SUPABASE_STUDIO_HEALTH_CHECK_COMMAND=curl --fail http://{KOS_SUPABASE_CONTAINER_NAME}:3000/
      || exit 1
    - SUPABASE_STUDIO_HEALTH_CHECK_INTERVAL=30s
    - SUPABASE_STUDIO_HEALTH_CHECK_RETRIES=3
    - SUPABASE_STUDIO_HEALTH_CHECK_TIMEOUT=10s
    - SUPABASE_STUDIO_IMAGE=supabase/studio:latest
    - SUPABASE_STUDIO_INTERNAL_PORT=3000
    - SUPABASE_STUDIO_NETWORK=kos-network
    - SUPABASE_STUDIO_RESTART_POLICY=unless-stopped
    - SUPABASE_STUDIO_VOLUME=kos-supabase-studio:/data
    - SUPABASE_VOLUME=kos-supabase:/data
    - ADMIN_USER=kosadmin
    - ADMIN_PASSWORD=kos30437
    volumes:
    - type: volume
      source: kos-supabase-studio
      target: /data
      volume: {}
    - type: volume
      source: kos-supabase
      target: /data
      volume: {}
    networks:
    - kos-network
    restart: unless-stopped
    depends_on:
    - postgres
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: kos-elasticsearch
    ports:
    - 9200:9200
    - 9300:9300
    environment:
    - ELASTICSEARCH_CATEGORY=infra
    - ELASTICSEARCH_CLUSTER_EXTERNAL_PORT=9300
    - ELASTICSEARCH_CLUSTER_INTERNAL_PORT=9300
    - ELASTICSEARCH_COMPOSE_GROUP=infra
    - ELASTICSEARCH_CONTAINER_NAME=kos-elasticsearch
    - ELASTICSEARCH_DEPENDS_ON=
    - ELASTICSEARCH_ENABLE=true
    - ELASTICSEARCH_EXTERNAL_PORT=9200
    - ELASTICSEARCH_HEALTH_CHECK_COMMAND=curl -u kosadmin:kos30437 -f http://kos-elasticsearch:9200/_cluster/health
      || exit 1
    - ELASTICSEARCH_HEALTH_CHECK_INTERVAL=30s
    - ELASTICSEARCH_HEALTH_CHECK_RETRIES=3
    - ELASTICSEARCH_HEALTH_CHECK_TIMEOUT=10s
    - ELASTICSEARCH_IMAGE=docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    - ELASTICSEARCH_INTERNAL_PORT=9200
    - ELASTICSEARCH_NETWORK=kos-network
    - ELASTICSEARCH_PASSWORD=kos30437
    - ELASTICSEARCH_PROFILE=core
    - ELASTICSEARCH_RESTART_POLICY=unless-stopped
    - ELASTICSEARCH_USERNAME=kosadmin
    - ELASTICSEARCH_VOLUME=kos-elasticsearch:/data
    - ADMIN_USER=kosadmin
    - ADMIN_PASSWORD=kos30437
    - ELASTICSEARCH_PASSWORD=kos30437
    volumes:
    - type: volume
      source: kos-elasticsearch
      target: /data
      volume: {}
    networks:
    - kos-network
    restart: unless-stopped
  minio:
    image: minio/minio:RELEASE.2024-01-16T16-07-38Z
    container_name: kos-minio
    ports:
    - 9000:9000
    - 9001:9001
    environment:
    - MINIO_CATEGORY=infra
    - MINIO_COMMAND=server /data --console-address ":9001"
    - MINIO_COMPOSE_GROUP=infra
    - MINIO_CONSOLE_EXTERNAL_PORT=9001
    - MINIO_CONSOLE_INTERNAL_PORT=9001
    - MINIO_CONTAINER_NAME=kos-minio
    - MINIO_DEPENDS_ON=
    - MINIO_ENABLE=true
    - MINIO_EXTERNAL_PORT=9000
    - MINIO_HEALTH_CHECK_COMMAND=curl -f http://kos-minio:9000/minio/health/live ||
      exit 1
    - MINIO_HEALTH_CHECK_INTERVAL=30s
    - MINIO_HEALTH_CHECK_RETRIES=3
    - MINIO_HEALTH_CHECK_TIMEOUT=10s
    - MINIO_IMAGE=minio/minio:RELEASE.2024-01-16T16-07-38Z
    - MINIO_INTERNAL_PORT=9000
    - MINIO_NETWORK=kos-network
    - MINIO_PROFILE=core
    - MINIO_RESTART_POLICY=unless-stopped
    - MINIO_ROOT_PASSWORD=kos30437
    - MINIO_ROOT_USER=kosadmin
    - MINIO_VOLUME=kos-minio:/data
    - ADMIN_USER=kosadmin
    - ADMIN_PASSWORD=kos30437
    volumes:
    - type: volume
      source: kos-minio
      target: /data
      volume: {}
    networks:
    - kos-network
    restart: unless-stopped
    command: server /data --console-address ":9001"
  mongo:
    image: mongo:7.0
    container_name: kos-mongo
    ports:
    - 27017:27017
    environment:
    - MONGO_ADMIN_PASSWORD=kos30437
    - MONGO_ADMIN_USER=kosadmin
    - MONGO_CATEGORY=infra
    - MONGO_COMPOSE_GROUP=infra
    - MONGO_CONTAINER_NAME=kos-mongo
    - MONGO_DEPENDS_ON=
    - MONGO_ENABLE=true
    - MONGO_EXPRESS_CATEGORY=admin
    - MONGO_EXPRESS_COMPOSE_GROUP=admin
    - MONGO_EXPRESS_CONTAINER_NAME=kos-mongo-express
    - MONGO_EXPRESS_DEPENDS_ON=mongo
    - MONGO_EXPRESS_ENABLE=true
    - MONGO_EXPRESS_EXTERNAL_PORT=27018
    - MONGO_EXPRESS_HEALTH_CHECK_COMMAND=curl -f http://kos-mongo-express:8081 ||
      exit 1
    - MONGO_EXPRESS_HEALTH_CHECK_INTERVAL=30s
    - MONGO_EXPRESS_HEALTH_CHECK_RETRIES=3
    - MONGO_EXPRESS_HEALTH_CHECK_TIMEOUT=10s
    - MONGO_EXPRESS_IMAGE=mongo-express:1.0.0
    - MONGO_EXPRESS_INTERNAL_PORT=8081
    - MONGO_EXPRESS_NETWORK=kos-network
    - MONGO_EXPRESS_PASSWORD=kos30437
    - MONGO_EXPRESS_PROFILE=admin
    - MONGO_EXPRESS_RESTART_POLICY=unless-stopped
    - MONGO_EXPRESS_USER=kosadmin
    - MONGO_EXPRESS_VOLUME=kos-mongo-express:/data
    - MONGO_EXTERNAL_PORT=27017
    - MONGO_HEALTH_CHECK_COMMAND=mongosh --host kos-mongo --eval "db.adminCommand('ping')"
    - MONGO_HEALTH_CHECK_INTERVAL=30s
    - MONGO_HEALTH_CHECK_RETRIES=3
    - MONGO_HEALTH_CHECK_TIMEOUT=10s
    - MONGO_IMAGE=mongo:7.0
    - MONGO_INTERNAL_PORT=27017
    - MONGO_NETWORK=kos-network
    - MONGO_PROFILE=core
    - MONGO_RESTART_POLICY=unless-stopped
    - MONGO_VOLUME=kos-mongo:/data
    - ADMIN_USER=kosadmin
    - ADMIN_PASSWORD=kos30437
    volumes:
    - type: volume
      source: kos-mongo-express
      target: /data
      volume: {}
    - type: volume
      source: kos-mongo
      target: /data
      volume: {}
    networks:
    - kos-network
    restart: unless-stopped
  neo4j:
    image: neo4j:5.15
    container_name: kos-neo4j
    ports:
    - 7687:7687
    - 7474:7474
    environment:
    - NEO4J_CATEGORY=infra
    - NEO4J_COMPOSE_GROUP=infra
    - NEO4J_CONTAINER_NAME=kos-neo4j
    - NEO4J_DATA_VOLUME=kos-neo4j:/data
    - NEO4J_DEPENDS_ON=
    - NEO4J_ENABLE=true
    - NEO4J_EXTERNAL_PORT=7687
    - NEO4J_HEALTH_CHECK_COMMAND=curl -f http://kos-neo4j:7474/browser/ || exit 1
    - NEO4J_HEALTH_CHECK_INTERVAL=30s
    - NEO4J_HEALTH_CHECK_RETRIES=3
    - NEO4J_HEALTH_CHECK_TIMEOUT=10s
    - NEO4J_HTTP_EXTERNAL_PORT=7474
    - NEO4J_HTTP_INTERNAL_PORT=7474
    - NEO4J_IMAGE=neo4j:5.15
    - NEO4J_IMPORT_VOLUME=kos-neo4j:/import
    - NEO4J_INTERNAL_PORT=7687
    - NEO4J_LOGS_VOLUME=kos-neo4j:/logs
    - NEO4J_NETWORK=kos-network
    - NEO4J_PASSWORD=kos30437
    - NEO4J_PLUGINS_VOLUME=kos-neo4j:/plugins
    - NEO4J_PROFILE=core
    - NEO4J_RESTART_POLICY=unless-stopped
    - NEO4J_USER=kosadmin
    - ADMIN_USER=kosadmin
    - ADMIN_PASSWORD=kos30437
    - NEO4J_USER=kosadmin
    - NEO4J_PASSWORD=kos30437
    volumes:
    - type: volume
      source: kos-neo4j
      target: /data
      volume: {}
    - type: volume
      source: kos-neo4j
      target: /import
      volume: {}
    - type: volume
      source: kos-neo4j
      target: /logs
      volume: {}
    - type: volume
      source: kos-neo4j
      target: /plugins
      volume: {}
    networks:
    - kos-network
    restart: unless-stopped
  postgres:
    image: postgres:15-alpine
    container_name: kos-postgres
    ports:
    - 5432:5432
    environment:
    - POSTGRES_CATEGORY=infra
    - POSTGRES_COMPOSE_GROUP=infra
    - POSTGRES_CONTAINER_NAME=kos-postgres
    - POSTGRES_DB=kos
    - POSTGRES_DEPENDS_ON=
    - POSTGRES_ENABLE=true
    - POSTGRES_EXTERNAL_PORT=5432
    - POSTGRES_HEALTH_CHECK_COMMAND=pg_isready -h kos-postgres -U kosadmin -d kos
    - POSTGRES_HEALTH_CHECK_INTERVAL=30s
    - POSTGRES_HEALTH_CHECK_RETRIES=3
    - POSTGRES_HEALTH_CHECK_TIMEOUT=10s
    - POSTGRES_IMAGE=postgres:15-alpine
    - POSTGRES_INTERNAL_PORT=5432
    - POSTGRES_NETWORK=kos-network
    - POSTGRES_PASSWORD=kos30437
    - POSTGRES_PROFILE=core
    - POSTGRES_RESTART_POLICY=unless-stopped
    - POSTGRES_USER=kosadmin
    - POSTGRES_VOLUME=kos-postgres:/data
    - ADMIN_USER=kosadmin
    - ADMIN_PASSWORD=kos30437
    - POSTGRES_USER=kosadmin
    - POSTGRES_PASSWORD=kos30437
    volumes:
    - type: volume
      source: kos-postgres
      target: /data
      volume: {}
    networks:
    - kos-network
    restart: unless-stopped
  redis:
    image: redis:7.2-alpine
    container_name: kos-redis
    ports:
    - 6379:6379
    environment:
    - REDIS_CATEGORY=infra
    - REDIS_COMMANDER_CATEGORY=admin
    - REDIS_COMMANDER_COMPOSE_GROUP=admin
    - REDIS_COMMANDER_CONTAINER_NAME=kos-redis-commander
    - REDIS_COMMANDER_DEPENDS_ON=redis
    - REDIS_COMMANDER_ENABLE=true
    - REDIS_COMMANDER_EXTERNAL_PORT=6380
    - REDIS_COMMANDER_HEALTH_CHECK_COMMAND=curl -f http://kos-redis-commander:8081
      || exit 1
    - REDIS_COMMANDER_HEALTH_CHECK_INTERVAL=30s
    - REDIS_COMMANDER_HEALTH_CHECK_RETRIES=3
    - REDIS_COMMANDER_HEALTH_CHECK_TIMEOUT=10s
    - REDIS_COMMANDER_IMAGE=rediscommander/redis-commander:latest
    - REDIS_COMMANDER_INTERNAL_PORT=8081
    - REDIS_COMMANDER_NETWORK=kos-network
    - REDIS_COMMANDER_PASSWORD=kos30437
    - REDIS_COMMANDER_PROFILE=admin
    - REDIS_COMMANDER_REDIS_HOSTS=local:kos-redis:6379:0:kos30437
    - REDIS_COMMANDER_RESTART_POLICY=unless-stopped
    - REDIS_COMMANDER_USER=kosadmin
    - REDIS_COMPOSE_GROUP=infra
    - REDIS_CONTAINER_NAME=kos-redis
    - REDIS_DEPENDS_ON=
    - REDIS_ENABLE=true
    - REDIS_EXTERNAL_PORT=6379
    - REDIS_HEALTH_CHECK_COMMAND=redis-cli -h kos-redis -a kos30437 ping | grep PONG
    - REDIS_HEALTH_CHECK_INTERVAL=30s
    - REDIS_HEALTH_CHECK_RETRIES=3
    - REDIS_HEALTH_CHECK_TIMEOUT=10s
    - REDIS_IMAGE=redis:7.2-alpine
    - REDIS_INTERNAL_PORT=6379
    - REDIS_NETWORK=kos-network
    - REDIS_PASSWORD=kos30437
    - REDIS_PROFILE=core
    - REDIS_RESTART_POLICY=unless-stopped
    - REDIS_VOLUME=kos-redis:/data
    - ADMIN_USER=kosadmin
    - ADMIN_PASSWORD=kos30437
    - REDIS_PASSWORD=kos30437
    volumes:
    - type: volume
      source: kos-redis
      target: /data
      volume: {}
    networks:
    - kos-network
    restart: unless-stopped
  weaviate:
    image: semitechnologies/weaviate:1.22.4
    container_name: kos-weaviate
    ports:
    - 8082:8080
    environment:
    - WEAVIATE_CATEGORY=infra
    - WEAVIATE_CLOUD_API_KEY=
    - WEAVIATE_CLOUD_ENABLE=false
    - WEAVIATE_CLOUD_URL=
    - WEAVIATE_COMPOSE_GROUP=infra
    - WEAVIATE_CONTAINER_NAME=kos-weaviate
    - WEAVIATE_DEPENDS_ON=huggingface
    - WEAVIATE_ENABLE=true
    - WEAVIATE_ENABLE_MODULES=text2vec-transformers
    - WEAVIATE_EXTERNAL_PORT=8082
    - WEAVIATE_HEALTH_CHECK_COMMAND=curl -f http://kos-weaviate:8080/v1/.well-known/ready
      || exit 1
    - WEAVIATE_HEALTH_CHECK_INTERVAL=30s
    - WEAVIATE_HEALTH_CHECK_RETRIES=3
    - WEAVIATE_HEALTH_CHECK_TIMEOUT=10s
    - WEAVIATE_IMAGE=semitechnologies/weaviate:1.22.4
    - WEAVIATE_INTERNAL_PORT=8080
    - WEAVIATE_NETWORK=kos-network
    - WEAVIATE_PROFILE=core
    - WEAVIATE_RESTART_POLICY=unless-stopped
    - WEAVIATE_TRANSFORMERS_INFERENCE_API=http://kos-huggingface:8082
    - WEAVIATE_VOLUME=kos-weaviate:/data
    - ADMIN_USER=kosadmin
    - ADMIN_PASSWORD=kos30437
    volumes:
    - type: volume
      source: kos-weaviate
      target: /data
      volume: {}
    networks:
    - kos-network
    restart: unless-stopped
  supabase_studio:
    image: supabase/studio:latest
    container_name: kos-supabase-studio
    ports:
    - 3003:3000
    environment:
    - SUPABASE_STUDIO_CONTAINER_NAME=kos-supabase-studio
    - SUPABASE_STUDIO_ENABLE=true
    - SUPABASE_STUDIO_EXTERNAL_PORT=3003
    - SUPABASE_STUDIO_HEALTH_CHECK_COMMAND=curl --fail http://{KOS_SUPABASE_CONTAINER_NAME}:3000/
      || exit 1
    - SUPABASE_STUDIO_HEALTH_CHECK_INTERVAL=30s
    - SUPABASE_STUDIO_HEALTH_CHECK_RETRIES=3
    - SUPABASE_STUDIO_HEALTH_CHECK_TIMEOUT=10s
    - SUPABASE_STUDIO_IMAGE=supabase/studio:latest
    - SUPABASE_STUDIO_INTERNAL_PORT=3000
    - SUPABASE_STUDIO_NETWORK=kos-network
    - SUPABASE_STUDIO_RESTART_POLICY=unless-stopped
    - SUPABASE_STUDIO_VOLUME=kos-supabase-studio:/data
    - ADMIN_USER=kosadmin
    - ADMIN_PASSWORD=kos30437
    volumes:
    - type: volume
      source: kos-supabase-studio
      target: /data
      volume: {}
    networks:
    - kos-network
    restart: unless-stopped
  mongo_express:
    image: mongo-express:1.0.0
    container_name: kos-mongo-express
    ports:
    - 27018:8081
    environment:
    - ADMIN_USER=kosadmin
    - ADMIN_PASSWORD=kos30437
    - MONGO_EXPRESS_USER=kosadmin
    - MONGO_EXPRESS_PASSWORD=kos30437
    volumes:
    - type: volume
      source: kos-mongo-express
      target: /data
      volume: {}
    networks:
    - kos-network
    restart: unless-stopped
    depends_on:
    - mongo
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: kos-pgadmin
    ports:
    - 5433:80
    environment:
    - ADMIN_USER=kosadmin
    - ADMIN_PASSWORD=kos30437
    - PGADMIN_DEFAULT_EMAIL=admin@kos.local
    - PGADMIN_DEFAULT_PASSWORD=kos30437
    volumes:
    - type: volume
      source: kos-pgadmin
      target: /data
      volume: {}
    networks:
    - kos-network
    restart: unless-stopped
    depends_on:
    - postgres
  redis_commander:
    image: rediscommander/redis-commander:latest
    container_name: kos-redis-commander
    ports:
    - 6380:8081
    environment:
    - REDIS_COMMANDER_PASSWORD=kos30437
    - REDIS_COMMANDER_REDIS_HOSTS=local:kos-redis:6379:0:kos30437
    - REDIS_COMMANDER_USER=kosadmin
    - ADMIN_USER=kosadmin
    - ADMIN_PASSWORD=kos30437
    - REDIS_COMMANDER_USER=kosadmin
    - REDIS_COMMANDER_PASSWORD=kos30437
    networks:
    - kos-network
    restart: unless-stopped
    depends_on:
    - redis
  n8n:
    image: n8nio/n8n:latest
    container_name: kos-n8n
    ports:
    - 5678:5678
    environment:
    - N8N_BASIC_AUTH_PASSWORD=kos30437
    - N8N_BASIC_AUTH_USER=kosadmin
    - N8N_CATEGORY=workflow
    - N8N_COMPOSE_GROUP=workflow
    - N8N_CONTAINER_NAME=kos-n8n
    - N8N_DB_POSTGRESDB_DATABASE=n8n
    - N8N_DB_POSTGRESDB_HOST=kos-postgres
    - N8N_DB_POSTGRESDB_PASSWORD=kos30437
    - N8N_DB_POSTGRESDB_PORT=5432
    - N8N_DB_POSTGRESDB_USER=kosadmin
    - N8N_DB_TYPE=postgresdb
    - N8N_DEPENDS_ON=postgres
    - N8N_ENABLE=true
    - N8N_EXTERNAL_PORT=5678
    - N8N_HEALTH_CHECK_COMMAND=curl -f http://kos-n8n:5678 || exit 1
    - N8N_HEALTH_CHECK_INTERVAL=30s
    - N8N_HEALTH_CHECK_RETRIES=3
    - N8N_HEALTH_CHECK_TIMEOUT=10s
    - N8N_IMAGE=n8nio/n8n:latest
    - N8N_INTERNAL_PORT=5678
    - N8N_NETWORK=kos-network
    - N8N_PROFILE=workflow
    - N8N_RESTART_POLICY=unless-stopped
    - N8N_VOLUME=kos-n8n:/data
    - N8N_WEBHOOK_URL=http://kos-n8n:5678/
    - ADMIN_USER=kosadmin
    - ADMIN_PASSWORD=kos30437
    volumes:
    - type: volume
      source: kos-n8n
      target: /data
      volume: {}
    networks:
    - kos-network
    restart: unless-stopped
    depends_on:
    - postgres
  nextcloud:
    image: nextcloud:25.0.0
    container_name: kos-nextcloud
    ports:
    - 8083:80
    environment:
    - NEXTCLOUD_ADMIN_PASSWORD=kos30437
    - NEXTCLOUD_ADMIN_USER=kosadmin
    - NEXTCLOUD_CATEGORY=workflow
    - NEXTCLOUD_COMPOSE_GROUP=workflow
    - NEXTCLOUD_CONFIG_VOLUME=kos-nextcloud:/config
    - NEXTCLOUD_CONTAINER_NAME=kos-nextcloud
    - NEXTCLOUD_DATA_VOLUME=kos-nextcloud:/data
    - NEXTCLOUD_DB_HOST=kos-postgres
    - NEXTCLOUD_DB_NAME=nextcloud
    - NEXTCLOUD_DB_PASSWORD=kos30437
    - NEXTCLOUD_DB_PORT=5432
    - NEXTCLOUD_DB_TYPE=pgsql
    - NEXTCLOUD_DEPENDS_ON=postgres
    - NEXTCLOUD_ENABLE=true
    - NEXTCLOUD_EXTERNAL_PORT=8083
    - NEXTCLOUD_HEALTH_CHECK_COMMAND=curl -f http://kos-nextcloud:80/status.php ||
      exit 1
    - NEXTCLOUD_HEALTH_CHECK_INTERVAL=30s
    - NEXTCLOUD_HEALTH_CHECK_RETRIES=3
    - NEXTCLOUD_HEALTH_CHECK_TIMEOUT=10s
    - NEXTCLOUD_IMAGE=nextcloud:25.0.0
    - NEXTCLOUD_INTERNAL_PORT=80
    - NEXTCLOUD_NETWORK=kos-network
    - NEXTCLOUD_PROFILE=core
    - NEXTCLOUD_RESTART_POLICY=unless-stopped
    - ADMIN_USER=kosadmin
    - ADMIN_PASSWORD=kos30437
    volumes:
    - type: volume
      source: kos-nextcloud
      target: /config
      volume: {}
    - type: volume
      source: kos-nextcloud
      target: /data
      volume: {}
    networks:
    - kos-network
    restart: unless-stopped
    depends_on:
    - postgres
  penpot:
    image: penpotapp/frontend:latest
    container_name: kos-penpot
    ports:
    - 9002:9002
    environment:
    - PENPOT_ADMIN_PASSWORD=kos30437
    - PENPOT_ADMIN_USER=kosadmin
    - PENPOT_CATEGORY=workflow
    - PENPOT_COMPOSE_GROUP=workflow
    - PENPOT_CONTAINER_NAME=kos-penpot
    - PENPOT_DATABASE_URI=postgresql://kosadmin:kos30437@kos-postgres:5432/penpot
    - PENPOT_DEPENDS_ON=postgres,redis
    - PENPOT_ENABLE=true
    - PENPOT_EXTERNAL_PORT=9002
    - PENPOT_HEALTH_CHECK_COMMAND=curl -f http://kos-penpot:9002 || exit 1
    - PENPOT_HEALTH_CHECK_INTERVAL=30s
    - PENPOT_HEALTH_CHECK_RETRIES=3
    - PENPOT_HEALTH_CHECK_TIMEOUT=10s
    - PENPOT_IMAGE=penpotapp/frontend:latest
    - PENPOT_INTERNAL_PORT=9002
    - PENPOT_NETWORK=kos-network
    - PENPOT_PROFILE=workflow
    - PENPOT_REDIS_URI=redis://kos-redis:6379/0
    - PENPOT_RESTART_POLICY=unless-stopped
    - PENPOT_VOLUME=kos-penpot:/data
    - ADMIN_USER=kosadmin
    - ADMIN_PASSWORD=kos30437
    volumes:
    - type: volume
      source: kos-penpot
      target: /data
      volume: {}
    networks:
    - kos-network
    restart: unless-stopped
    depends_on:
    - postgres
    - redis
  nginx:
    image: nginx:alpine
    container_name: kos-nginx
    ports:
    - 80:80
    environment:
    - NGINX_CATEGORY=core
    - NGINX_COMPOSE_GROUP=core
    - NGINX_CONFIG_VOLUME=kos-nginx:/config
    - NGINX_CONTAINER_NAME=kos-nginx
    - NGINX_DEPENDS_ON=frontend,api
    - NGINX_ENABLE=true
    - NGINX_EXTERNAL_PORT=80
    - NGINX_HEALTH_CHECK_COMMAND=curl -f http://kos-nginx:80 || exit 1
    - NGINX_HEALTH_CHECK_INTERVAL=30s
    - NGINX_HEALTH_CHECK_RETRIES=3
    - NGINX_HEALTH_CHECK_TIMEOUT=10s
    - NGINX_IMAGE=nginx:alpine
    - NGINX_INTERNAL_PORT=80
    - NGINX_LOGS_VOLUME=kos-nginx:/logs
    - NGINX_NETWORK=kos-network
    - NGINX_PROFILE=core
    - NGINX_RESTART_POLICY=unless-stopped
    - NGINX_SSL_EXTERNAL_PORT=443
    - NGINX_SSL_INTERNAL_PORT=443
    - ADMIN_USER=kosadmin
    - ADMIN_PASSWORD=kos30437
    volumes:
    - type: volume
      source: kos-nginx
      target: /config
      volume: {}
    - type: volume
      source: kos-nginx
      target: /logs
      volume: {}
    networks:
    - kos-network
    restart: unless-stopped
networks:
  kos-network:
    driver: bridge
    ipam:
      config:
      - subnet: 172.20.0.0/16
volumes:
  kos-mongo-express:
    driver: local
  kos-redis:
    driver: local
  kos-weaviate:
    driver: local
  kos-gitea:
    driver: local
  kos-models-data:
    driver: local
  kos-ollama:
    driver: local
  kos-postgres:
    driver: local
  kos-browseruse:
    driver: local
  kos-nginx:
    driver: local
  kos-supabase:
    driver: local
  kos-supabase-studio:
    driver: local
  kos-elasticsearch:
    driver: local
  kos-nextcloud:
    driver: local
  kos-openwebui:
    driver: local
  kos-neo4j:
    driver: local
  kos-codium:
    driver: local
  kos-pgadmin:
    driver: local
  kos-minio:
    driver: local
  kos-n8n:
    driver: local
  kos-context7:
    driver: local
  kos-mongo:
    driver: local
  kos-penpot:
    driver: local
